<!-- templates/phonghat-card.hbs -->
<div class="cyberpunk-card" data-phong-id="{{this._id}}">
  <!-- Image Container -->
  <div class="image-container">
    <img src="{{this.LinkAnh}}" alt="{{this.TenPhong}}"
      onerror="this.src='https://images.unsplash.com/photo-1514320291840-2e0a9bf2a9ae?ixlib=rb-4.0.3&auto=format&fit=crop&w=500&q=80'">

    <!-- Status Badge -->
    <div class="status-badge status-{{this.TrangThai}}">
      <i class="fas fa-circle"></i>
      {{getStatusText this.TrangThai}}
    </div>

    <!-- View Image Overlay -->
    <div class="image-overlay">
      <button class="view-image-btn" data-image="{{this.LinkAnh}}" data-title="{{this.TenPhong}}">
        <i class="fas fa-expand-arrows-alt"></i>
        PHÓNG TO
      </button>
    </div>
  </div>

  <!-- Card Content -->
  <div class="card-content">
    <!-- Header -->
    <div class="card-header">
      <div class="room-badge">
        <span class="badge-text">{{this.LoaiPhong}}</span>
      </div>
      <div class="microphone-icon">
        <i class="fas fa-microphone-alt"></i>
      </div>
    </div>

    <!-- Main Content -->
    <div class="main-content">
      <h3 class="room-name">{{this.TenPhong}}</h3>
      <p class="room-code">{{this.MaPhong}}</p>

      <!-- Room Info -->
      <div class="room-info">
        <div class="info-item">
          <i class="fas fa-users"></i>
          <span>{{this.SucChua}} người</span>
        </div>
        <div class="info-item">
          <i class="fas fa-clock"></i>
          <span>{{formatNumber this.GiaTien}}VNĐ/H</span>
        </div>
      </div>

      <!-- Description -->
      <div class="description">
        <p>{{this.GhiChu}}</p>
      </div>

      <!-- Features -->
      <div class="features">
        <div class="feature-item">
          <i class="fas fa-wifi" title="WiFi miễn phí"></i>
        </div>
        <div class="feature-item">
          <i class="fas fa-tv" title="Màn hình 4K"></i>
        </div>
        <div class="feature-item">
          <i class="fas fa-snowflake" title="Điều hòa"></i>
        </div>
        <div class="feature-item">
          <i class="fas fa-cocktail" title="Phục vụ đồ uống"></i>
        </div>
      </div>

      <!-- Action Buttons -->
      <div class="action-buttons">
        <button class="btn-book" data-room-id="{{this._id}}">
          <i class="fas fa-calendar-plus"></i>
          ĐẶT NGAY
        </button>
        <button class="btn-detail" data-room-id="{{this._id}}">
          <i class="fas fa-info-circle"></i>
          CHI TIẾT
        </button>
      </div>
    </div>
  </div>

  <!-- Glow Effect -->
  <div class="cyber-glow"></div>
</div>

<!-- Image Modal -->
<div class="image-modal" id="imageModal">
  <div class="modal-overlay"></div>
  <div class="modal-container">
    <div class="modal-header">
      <h3 id="modalTitle"></h3>
      <button class="close-modal">
        <i class="fas fa-times"></i>
      </button>
    </div>
    <div class="modal-body">
      <img id="modalImage" src="" alt="">
    </div>
    <div class="modal-footer">
      <p id="modalDescription"></p>
      <div class="modal-actions">
        <button class="btn-download">
          <i class="fas fa-download"></i>
          Tải ảnh
        </button>
        <button class="btn-zoom-in">
          <i class="fas fa-search-plus"></i>
          Phóng to
        </button>
        <button class="btn-zoom-out">
          <i class="fas fa-search-minus"></i>
          Thu nhỏ
        </button>
      </div>
    </div>
  </div>
</div>



<style>
  :root {
    --cyber-purple: #7A00FF;
    --cyber-dark: #2B0033;
    --cyber-pink: #C800FF;
    --cyber-orange: #FF3C00;
    --cyber-cyan: #00F0FF;
    --cyber-yellow: #FFD700;
  }


  /* ===== PRODUCT CARD TỐI ƯU CHO GRID ===== */
  .cyberpunk-card {
    position: relative;
    background: rgba(43, 0, 51, 0.9);
    border: 1px solid var(--cyber-purple);
    border-radius: 20px;
    overflow: hidden;
    box-shadow:
      0 8px 32px rgba(122, 0, 255, 0.25),
      inset 0 0 20px rgba(122, 0, 255, 0.1);
    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    backdrop-filter: blur(15px);
    width: 100%;
    max-width: 380px;
    min-height: 612px;
    height: auto;
    margin: 0 auto;
    font-family: 'Segoe UI', 'Orbitron', sans-serif;
    display: flex;
    flex-direction: column;
  }

  .cyberpunk-card:hover {
    transform: translateY(-8px);
    box-shadow:
      0 20px 60px rgba(122, 0, 255, 0.4),
      0 0 80px rgba(200, 0, 255, 0.2),
      inset 0 0 30px rgba(122, 0, 255, 0.15);
    border-color: var(--cyber-cyan);
  }

  /* Card Header - Tối ưu không gian */
  .card-header {
    background: linear-gradient(135deg, var(--cyber-purple), var(--cyber-pink));
    padding: 1rem;
    position: relative;
    overflow: hidden;
    flex-shrink: 0;
  }

  .card-header::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: linear-gradient(90deg,
        transparent,
        var(--cyber-cyan),
        var(--cyber-yellow),
        transparent);
    animation: scanline 3s linear infinite;
  }

  .room-badge {
    background: rgba(0, 240, 255, 0.25);
    border: 1px solid var(--cyber-cyan);
    border-radius: 20px;
    padding: 0.4rem 1rem;
    display: inline-block;
    backdrop-filter: blur(10px);
  }

  .badge-text {
    color: var(--cyber-cyan);
    font-weight: 700;
    font-size: 0.75rem;
    text-transform: uppercase;
    letter-spacing: 1px;
  }

  .microphone-icon {
    position: absolute;
    top: 50%;
    right: 1rem;
    transform: translateY(-50%);
    color: rgba(255, 255, 255, 0.4);
    font-size: 1.3rem;
  }

  /* Image Container - Tối ưu tỷ lệ */
  .image-container {
    position: relative;
    height: 200px;
    overflow: hidden;
    flex-shrink: 0;
  }

  .image-container img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease;
  }

  .cyberpunk-card:hover .image-container img {
    transform: scale(1.08);
  }

  /* Status Badge - Vị trí tối ưu */
  .status-badge {
    position: absolute;
    top: 12px;
    right: 12px;
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.7rem;
    font-weight: 800;
    text-transform: uppercase;
    letter-spacing: 1px;
    backdrop-filter: blur(15px);
    border: 1px solid;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
  }

  .status-Trống {
    background: rgba(39, 174, 96, 0.9);
    border-color: #27ae60;
    color: white;
  }

  .status-Đang.sử.dụng {
    background: rgba(231, 76, 60, 0.9);
    border-color: #e74c3c;
    color: white;
  }

  .status-Đang.bảo.trì {
    background: rgba(243, 156, 18, 0.9);
    border-color: #f39c12;
    color: white;
  }

  .status-Đã.đặt.trước {
    background: rgba(155, 89, 182, 0.9);
    border-color: #9b59b6;
    color: white;
  }

  .status-badge i {
    font-size: 0.4rem;
    margin-right: 0.4rem;
  }

  /* Image Overlay - Hiệu ứng tinh tế */
  .image-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(to bottom,
        rgba(43, 0, 51, 0.8),
        rgba(122, 0, 255, 0.6));
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: all 0.3s ease;
  }

  .image-container:hover .image-overlay {
    opacity: 1;
  }

  .view-image-btn {
    background: rgba(0, 240, 255, 0.25);
    border: 2px solid var(--cyber-cyan);
    color: var(--cyber-cyan);
    padding: 0.7rem 1.2rem;
    border-radius: 25px;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 1px;
    font-size: 0.75rem;
    cursor: pointer;
    transition: all 0.3s ease;
    backdrop-filter: blur(10px);
  }

  .view-image-btn:hover {
    background: var(--cyber-cyan);
    color: var(--cyber-dark);
    box-shadow: 0 0 20px var(--cyber-cyan);
    transform: scale(1.05);
  }

  /* Card Content - Tối ưu bố cục */
  .card-content {
    padding: 1.5rem;
    color: white;
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 0.8rem;
  }

  .room-name {
    font-size: 1.3rem;
    font-weight: 800;
    margin: 0;
    background: linear-gradient(45deg, var(--cyber-cyan), var(--cyber-yellow));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    text-shadow: 0 0 15px rgba(0, 240, 255, 0.4);
    line-height: 1.2;
    display: -webkit-box;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .room-code {
    color: var(--cyber-cyan);
    font-size: 0.75rem;
    margin: 0;
    font-family: 'Orbitron', monospace;
    opacity: 0.8;
  }

  /* Room Info - Compact hơn */
  .room-info {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 0.8rem;
    margin: 0.5rem 0;
  }

  .info-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.6rem;
    background: rgba(255, 255, 255, 0.08);
    border-radius: 10px;
    border: 1px solid rgba(255, 255, 255, 0.1);
    transition: all 0.3s ease;
  }

  .info-item:hover {
    background: rgba(255, 255, 255, 0.12);
    border-color: var(--cyber-cyan);
    transform: translateY(-1px);
  }

  .info-item i {
    color: var(--cyber-cyan);
    width: 14px;
    font-size: 0.9rem;
  }

  .info-item span {
    font-size: 0.85rem;
    font-weight: 600;
  }

  /* Description - Giới hạn chiều cao */
  .description {
    background: rgba(255, 255, 255, 0.05);
    padding: 0.8rem;
    border-radius: 10px;
    border-left: 3px solid var(--cyber-purple);
    margin: 0;
    flex: 1;
    min-height: 60px;
    max-height: 80px;
    overflow: hidden;
  }

  .description p {
    margin: 0;
    font-size: 0.8rem;
    line-height: 1.4;
    color: #e0e0e0;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  /* Features - Layout gọn hơn */
  .features {
    display: flex;
    justify-content: space-around;
    margin: 0.5rem 0;
    padding: 0.8rem;
    background: rgba(255, 255, 255, 0.05);
    border-radius: 12px;
  }

  .feature-item {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0.4rem;
    border-radius: 8px;
    transition: all 0.3s ease;
    cursor: help;
  }

  .feature-item:hover {
    background: rgba(0, 240, 255, 0.1);
    transform: scale(1.1);
  }

  .feature-item i {
    color: var(--cyber-cyan);
    font-size: 1.1rem;
    transition: all 0.3s ease;
  }

  .feature-item:hover i {
    color: var(--cyber-yellow);
    text-shadow: 0 0 10px var(--cyber-yellow);
  }

  /* Action Buttons - Tối ưu không gian */
  .action-buttons {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 0.8rem;
    margin-top: auto;
  }

  .btn-book,
  .btn-detail {
    padding: 0.8rem;
    border: none;
    border-radius: 10px;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    font-size: 0.75rem;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.4rem;
    min-height: 44px;
  }

  .btn-book {
    background: linear-gradient(135deg, var(--cyber-purple), var(--cyber-pink));
    color: white;
    box-shadow: 0 4px 15px rgba(122, 0, 255, 0.3);
  }

  .btn-book:hover {
    background: linear-gradient(135deg, var(--cyber-pink), var(--cyber-purple));
    box-shadow: 0 6px 25px rgba(200, 0, 255, 0.5);
    transform: translateY(-2px);
  }

  .btn-detail {
    background: rgba(0, 240, 255, 0.15);
    border: 1px solid var(--cyber-cyan);
    color: var(--cyber-cyan);
    box-shadow: 0 4px 15px rgba(0, 240, 255, 0.2);
  }

  .btn-detail:hover {
    background: var(--cyber-cyan);
    color: var(--cyber-dark);
    box-shadow: 0 6px 25px var(--cyber-cyan);
    transform: translateY(-2px);
  }

  /* Cyber Glow Effect */
  .cyber-glow {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    opacity: 0;
    transition: opacity 0.3s ease;
    background: radial-gradient(circle at 50% 50%,
        rgba(122, 0, 255, 0.3) 0%,
        transparent 60%);
  }

  .cyberpunk-card:hover .cyber-glow {
    opacity: 1;
  }

  /* ===== IMAGE MODAL TOÀN MÀN HÌNH ===== */
  .image-modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: rgba(0, 0, 0, 0.95);
    z-index: 9999;
    backdrop-filter: blur(20px);
    animation: modalFadeIn 0.3s ease-out;
  }

  @keyframes modalFadeIn {
    from {
      opacity: 0;
      backdrop-filter: blur(0px);
    }

    to {
      opacity: 1;
      backdrop-filter: blur(20px);
    }
  }

  .modal-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
  }

  .modal-container {
    position: relative;
    width: 95vw;
    height: 95vh;
    margin: 2.5vh auto;
    background: linear-gradient(135deg,
        rgba(43, 0, 51, 0.95) 0%,
        rgba(122, 0, 255, 0.8) 100%);
    border: 2px solid var(--cyber-cyan);
    border-radius: 20px;
    box-shadow:
      0 0 80px rgba(122, 0, 255, 0.6),
      0 0 200px rgba(0, 240, 255, 0.4);
    display: flex;
    flex-direction: column;
    z-index: 2;
    overflow: hidden;
  }

  /* Modal Header */
  .modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1.5rem 2rem;
    background: rgba(0, 0, 0, 0.3);
    border-bottom: 1px solid rgba(122, 0, 255, 0.3);
    flex-shrink: 0;
  }

  .modal-header h3 {
    color: var(--cyber-cyan);
    font-size: 1.5rem;
    font-weight: 700;
    margin: 0;
    text-shadow: 0 0 10px rgba(0, 240, 255, 0.5);
  }

  .close-modal {
    background: rgba(255, 60, 0, 0.3);
    border: 2px solid var(--cyber-orange);
    color: white;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    font-size: 1.5rem;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    backdrop-filter: blur(10px);
  }

  .close-modal:hover {
    background: var(--cyber-orange);
    transform: scale(1.1) rotate(90deg);
    box-shadow: 0 0 25px var(--cyber-orange);
  }

  /* Modal Body - Ảnh chiếm toàn bộ không gian */
  .modal-body {
    flex: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 2rem;
    overflow: hidden;
    position: relative;
  }

  .modal-body img {
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
    border-radius: 12px;
    box-shadow: 0 10px 50px rgba(0, 0, 0, 0.5);
    transition: transform 0.3s ease;
    cursor: grab;
  }

  .modal-body img:active {
    cursor: grabbing;
  }

  .modal-body img.zoomed {
    cursor: zoom-out;
    transform: scale(1.5);
  }

  /* Modal Footer */
  .modal-footer {
    padding: 1.5rem 2rem;
    background: rgba(0, 0, 0, 0.3);
    border-top: 1px solid rgba(122, 0, 255, 0.3);
    flex-shrink: 0;
  }

  .modal-footer p {
    color: rgba(255, 255, 255, 0.8);
    font-size: 1rem;
    margin: 0 0 1rem 0;
    text-align: center;
  }

  .modal-actions {
    display: flex;
    justify-content: center;
    gap: 1rem;
    flex-wrap: wrap;
  }

  .modal-actions button {
    background: rgba(0, 240, 255, 0.2);
    border: 1px solid var(--cyber-cyan);
    color: var(--cyber-cyan);
    padding: 0.8rem 1.5rem;
    border-radius: 25px;
    font-weight: 600;
    font-size: 0.9rem;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    backdrop-filter: blur(10px);
  }

  .modal-actions button:hover {
    background: var(--cyber-cyan);
    color: var(--cyber-dark);
    transform: translateY(-2px);
    box-shadow: 0 5px 20px rgba(0, 240, 255, 0.4);
  }

  /* Zoom controls */
  .zoom-controls {
    position: absolute;
    bottom: 100px;
    right: 30px;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    z-index: 10;
  }

  .zoom-btn {
    background: rgba(0, 0, 0, 0.7);
    border: 1px solid var(--cyber-cyan);
    color: var(--cyber-cyan);
    width: 50px;
    height: 50px;
    border-radius: 50%;
    font-size: 1.2rem;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    backdrop-filter: blur(10px);
  }

  .zoom-btn:hover {
    background: var(--cyber-cyan);
    color: var(--cyber-dark);
    transform: scale(1.1);
  }

  /* Loading state */
  .modal-loading {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 1rem;
    color: var(--cyber-cyan);
  }

  .modal-loading .spinner {
    width: 50px;
    height: 50px;
    border: 3px solid rgba(0, 240, 255, 0.3);
    border-top: 3px solid var(--cyber-cyan);
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    0% {
      transform: rotate(0deg);
    }

    100% {
      transform: rotate(360deg);
    }
  }

  /* ===== RESPONSIVE MODAL ===== */
  @media (max-width: 768px) {
    .modal-container {
      width: 98vw;
      height: 98vh;
      margin: 1vh auto;
      border-radius: 15px;
    }

    .modal-header {
      padding: 1rem 1.5rem;
    }

    .modal-header h3 {
      font-size: 1.2rem;
    }

    .close-modal {
      width: 40px;
      height: 40px;
      font-size: 1.2rem;
    }

    .modal-body {
      padding: 1rem;
    }

    .modal-footer {
      padding: 1rem 1.5rem;
    }

    .modal-actions {
      gap: 0.5rem;
    }

    .modal-actions button {
      padding: 0.6rem 1rem;
      font-size: 0.8rem;
    }

    .zoom-controls {
      bottom: 80px;
      right: 20px;
    }

    .zoom-btn {
      width: 40px;
      height: 40px;
      font-size: 1rem;
    }
  }

  @media (max-width: 480px) {
    .modal-container {
      border-radius: 10px;
    }

    .modal-header {
      padding: 0.8rem 1rem;
    }

    .modal-header h3 {
      font-size: 1rem;
    }

    .modal-body {
      padding: 0.5rem;
    }

    .modal-footer {
      padding: 0.8rem 1rem;
    }

    .modal-actions {
      flex-direction: column;
      align-items: center;
    }

    .modal-actions button {
      width: 100%;
      justify-content: center;
    }
  }

  /* ===== FULLSCREEN MODE ===== */
  .modal-container.fullscreen {
    width: 100vw;
    height: 100vh;
    margin: 0;
    border-radius: 0;
    border: none;
  }

  /* ===== DRAG AND ZOOM EFFECTS ===== */
  .modal-body img.dragging {
    cursor: grabbing;
    transition: none;
  }

  .zoom-level {
    position: absolute;
    top: 20px;
    left: 20px;
    background: rgba(0, 0, 0, 0.7);
    color: var(--cyber-cyan);
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.8rem;
    font-weight: 600;
    backdrop-filter: blur(10px);
    border: 1px solid var(--cyber-cyan);
  }

  /* ===== RESPONSIVE CHO PRODUCT CARD ===== */
  @media (max-width: 1200px) {
    .cyberpunk-card {
      max-width: 350px;
      min-height: 480px;
      height: auto;
    }
  }

  @media (max-width: 992px) {
    .cyberpunk-card {
      max-width: 320px;
      /* Tablet: tăng chiều cao để chứa nội dung */
      min-height: 612px;
      height: auto;
    }
  }

  @media (max-width: 768px) {
    .cyberpunk-card {
      max-width: 100%;
      min-height: 660px;
      height: auto;
      margin: 0.5rem 0;
    }

    .room-info {
      grid-template-columns: 1fr;
      gap: 0.6rem;
    }

    .action-buttons {
      grid-template-columns: 1fr;
    }

    .card-content {
      padding: 1.2rem;
      gap: 0.6rem;
    }
  }

  @media (max-width: 576px) {
    .cyberpunk-card {
      border-radius: 16px;
      /* Mobile trung bình: tăng chiều cao hơn nữa */
      min-height: 680px;
      height: auto;
    }

    .image-container {
      height: 180px;
    }

    .room-name {
      font-size: 1.2rem;
    }

    .description {
      /* Cho phép description mở rộng */
      min-height: 70px;
      max-height: none;
      -webkit-line-clamp: unset;
      overflow: visible;
    }

    .description p {
      -webkit-line-clamp: unset;
      overflow: visible;
    }

    .btn-book,
    .btn-detail {
      padding: 0.7rem;
      font-size: 0.7rem;
      min-height: 40px;
    }
  }

  @media (max-width: 480px) {
    .cyberpunk-card {
      border-radius: 16px;
      min-height: 700px;
      height: auto;
    }

    .image-container {
      height: 180px;
    }

    .room-name {
      font-size: 1.2rem;
    }

    .description {
      min-height: 50px;
      max-height: 70px;
    }

    .btn-book,
    .btn-detail {
      padding: 0.7rem;
      font-size: 0.7rem;
      min-height: 40px;
    }
  }

  @media (max-width: 375px) {
    .cyberpunk-card {
      /* Mobile rất nhỏ: chiều cao linh hoạt hoàn toàn */
      min-height: 720px;
      height: auto;
    }

    .image-container {
      height: 160px;
    }

    .card-header {
      padding: 0.8rem;
    }

    .card-content {
      padding: 0.8rem;
    }

    .room-name {
      font-size: 1.1rem;
    }

    .action-buttons {
      gap: 0.6rem;
    }
  }

  /* Đảm bảo nội dung có thể mở rộng tự do */
.main-content {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 0.8rem;
}

.description {
  /* Cho phép description mở rộng tự do trên mobile */
  flex: 1;
  min-height: 60px;
}

/* Trên desktop giới hạn description */
@media (min-width: 769px) {
  .description {
    max-height: 80px;
    overflow: hidden;
  }
  
  .description p {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}

/* Trên mobile cho phép hiển thị đầy đủ */
@media (max-width: 768px) {
  .description {
    max-height: none;
    overflow: visible;
  }
  
  .description p {
    display: block;
    -webkit-line-clamp: unset;
    -webkit-box-orient: unset;
    overflow: visible;
  }
}

  /* ===== ANIMATION OPTIMIZATIONS ===== */
  @keyframes scanline {
    0% {
      transform: translateX(-100%);
    }

    100% {
      transform: translateX(100%);
    }
  }

  /* ===== PERFORMANCE OPTIMIZATIONS ===== */
  .cyberpunk-card {
    will-change: transform, box-shadow;
    transform: translateZ(0);
  }

  .image-container img {
    transform: translateZ(0);
  }
</style>




<script>
  // Xử lý modal ảnh TOÀN MÀN HÌNH
  document.addEventListener('DOMContentLoaded', function () {
    const modal = document.getElementById('imageModal');
    const modalImg = document.getElementById('modalImage');
    const modalTitle = document.getElementById('modalTitle');
    const modalDescription = document.getElementById('modalDescription');
    const closeBtn = document.querySelector('.close-modal');

    let isDragging = false;
    let startX, startY, scrollLeft, scrollTop;
    let scale = 1;
    let isZoomed = false;

    // Mở modal khi click nút xem ảnh
    document.addEventListener('click', function (e) {
      if (e.target.closest('.view-image-btn')) {
        const btn = e.target.closest('.view-image-btn');
        const imageUrl = btn.dataset.image;
        const title = btn.dataset.title;

        // Hiển thị loading
        modal.style.display = 'block';
        document.body.style.overflow = 'hidden';

        // Đặt thông tin
        modalTitle.textContent = title;
        modalDescription.textContent = `Phòng hát ${title} - Hình ảnh chất lượng cao`;

        // Tải ảnh
        const img = new Image();
        img.onload = function () {
          modalImg.src = imageUrl;
          modalImg.style.display = 'block';
          resetImageState();
        };
        img.onerror = function () {
          modalImg.alt = 'Không thể tải ảnh';
          modalImg.style.display = 'block';
        };
        img.src = imageUrl;
      }
    });

    // Đóng modal
    function closeModal() {
      modal.style.display = 'none';
      document.body.style.overflow = 'auto';
      resetImageState();
    }

    closeBtn.addEventListener('click', closeModal);

    // Đóng bằng phím ESC
    document.addEventListener('keydown', function (e) {
      if (e.key === 'Escape' && modal.style.display === 'block') {
        closeModal();
      }
    });

    // Đóng khi click overlay
    modal.addEventListener('click', function (e) {
      if (e.target === modal || e.target.classList.contains('modal-overlay')) {
        closeModal();
      }
    });

    // Reset trạng thái ảnh
    function resetImageState() {
      scale = 1;
      isZoomed = false;
      modalImg.style.transform = 'scale(1)';
      modalImg.classList.remove('zoomed');
      updateZoomLevel();
    }

    // Cập nhật hiển thị zoom level
    function updateZoomLevel() {
      let zoomLevel = document.querySelector('.zoom-level');
      if (!zoomLevel) {
        zoomLevel = document.createElement('div');
        zoomLevel.className = 'zoom-level';
        document.querySelector('.modal-body').appendChild(zoomLevel);
      }
      zoomLevel.textContent = `${Math.round(scale * 100)}%`;
    }

    // Zoom in
    document.addEventListener('click', function (e) {
      if (e.target.closest('.btn-zoom-in')) {
        scale = Math.min(scale + 0.5, 3);
        modalImg.style.transform = `scale(${scale})`;
        modalImg.classList.add('zoomed');
        isZoomed = scale > 1;
        updateZoomLevel();
      }

      if (e.target.closest('.btn-zoom-out')) {
        scale = Math.max(scale - 0.5, 1);
        modalImg.style.transform = `scale(${scale})`;
        if (scale === 1) {
          modalImg.classList.remove('zoomed');
          isZoomed = false;
        }
        updateZoomLevel();
      }
    });

    // Tải ảnh
    document.addEventListener('click', function (e) {
      if (e.target.closest('.btn-download')) {
        const imageUrl = modalImg.src;
        const link = document.createElement('a');
        link.href = imageUrl;
        link.download = `phong-hat-${modalTitle.textContent.toLowerCase().replace(/\s+/g, '-')}.jpg`;
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
      }
    });

    // Kéo ảnh khi zoom
    modalImg.addEventListener('mousedown', function (e) {
      if (isZoomed) {
        isDragging = true;
        startX = e.pageX - modalImg.offsetLeft;
        startY = e.pageY - modalImg.offsetTop;
        modalImg.classList.add('dragging');
        e.preventDefault();
      }
    });

    document.addEventListener('mousemove', function (e) {
      if (!isDragging || !isZoomed) return;

      const x = e.pageX - startX;
      const y = e.pageY - startY;

      modalImg.style.left = x + 'px';
      modalImg.style.top = y + 'px';
    });

    document.addEventListener('mouseup', function () {
      isDragging = false;
      modalImg.classList.remove('dragging');
    });

    // Zoom bằng scroll
    modalImg.addEventListener('wheel', function (e) {
      if (e.ctrlKey) {
        e.preventDefault();
        if (e.deltaY < 0) {
          // Zoom in
          scale = Math.min(scale + 0.1, 3);
        } else {
          // Zoom out
          scale = Math.max(scale - 0.1, 1);
        }
        modalImg.style.transform = `scale(${scale})`;
        isZoomed = scale > 1;
        updateZoomLevel();
      }
    });

    // Touch events cho mobile
    let touchStartDistance = 0;

    modalImg.addEventListener('touchstart', function (e) {
      if (e.touches.length === 2) {
        touchStartDistance = Math.hypot(
          e.touches[0].pageX - e.touches[1].pageX,
          e.touches[0].pageY - e.touches[1].pageY
        );
      }
    });

    modalImg.addEventListener('touchmove', function (e) {
      if (e.touches.length === 2) {
        e.preventDefault();
        const touchDistance = Math.hypot(
          e.touches[0].pageX - e.touches[1].pageX,
          e.touches[0].pageY - e.touches[1].pageY
        );

        if (touchStartDistance > 0) {
          scale = Math.max(1, Math.min(touchDistance / touchStartDistance, 3));
          modalImg.style.transform = `scale(${scale})`;
          isZoomed = scale > 1;
          updateZoomLevel();
        }
      }
    });
  });

  // Xử lý đặt phòng
  document.addEventListener('click', function (e) {
    if (e.target.closest('.btn-book')) {
      const roomId = e.target.closest('.btn-book').dataset.roomId;
      bookRoom(roomId);
    }

    if (e.target.closest('.btn-detail')) {
      const roomId = e.target.closest('.btn-detail').dataset.roomId;
      showRoomDetail(roomId);
    }
  });

  function bookRoom(roomId) {
    // Gọi API đặt phòng
    console.log('Đặt phòng:', roomId);
    // Hiển thị thông báo
    showNotification('Đang xử lý đặt phòng...', 'info');
  }

  function showRoomDetail(roomId) {
    // Hiển thị chi tiết phòng
    console.log('Chi tiết phòng:', roomId);
  }

  function showNotification(message, type = 'info') {
    // Tạo thông báo tạm thời
    const notification = document.createElement('div');
    notification.className = `alert alert-${type} cyber-notification`;
    notification.textContent = message;
    notification.style.cssText = `
      position: fixed;
      top: 20px;
      right: 20px;
      z-index: 1001;
      background: var(--cyber-dark);
      color: var(--cyber-cyan);
      border: 1px solid var(--cyber-cyan);
      padding: 1rem;
      border-radius: 8px;
      box-shadow: 0 0 20px rgba(0, 240, 255, 0.3);
    `;

    document.body.appendChild(notification);

    setTimeout(() => {
      notification.remove();
    }, 3000);
  }

</script>