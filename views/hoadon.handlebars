<div class="main-content">
  <div class="admin-dashboard">
    <!-- Header Premium -->
    <div class="dashboard-header">
      <div class="header-content">
        <div class="header-title">
          <div class="title-icon">üßæ</div>
          <div>
            <h1>Qu·∫£n l√Ω h√≥a ƒë∆°n</h1>
            <p>Theo d√µi v√† qu·∫£n l√Ω h√≥a ƒë∆°n karaoke</p>
          </div>
        </div>
        <div class="header-actions">
          <button class="btn-primary" onclick="openHoaDonModal()">
            <i class="fas fa-plus"></i>
            <span>T·∫°o h√≥a ƒë∆°n</span>
          </button>
        </div>
      </div>
    </div>

    <!-- Search and Filter Bar -->
    <div class="search-filter-bar">
      <div class="search-box">
        <i class="fas fa-search"></i>
        <input type="text" id="searchInput" placeholder="T√¨m ki·∫øm h√≥a ƒë∆°n..." onkeyup="filterHoaDon()">
        <button class="search-btn" onclick="filterHoaDon()">T√¨m ki·∫øm</button>
      </div>
      <div class="filter-controls">
        <select class="filter-select" id="statusFilter" onchange="filterHoaDon()">
          <option value="">T·∫•t c·∫£ tr·∫°ng th√°i</option>
          <option value="Ch∆∞a thanh to√°n">Ch∆∞a thanh to√°n</option>
          <option value="ƒê√£ thanh to√°n">ƒê√£ thanh to√°n</option>
          <option value="ƒê√£ h·ªßy">ƒê√£ h·ªßy</option>
        </select>
        <input type="date" class="filter-select" id="dateFromFilter" onchange="filterHoaDon()" placeholder="T·ª´ ng√†y">
        <input type="date" class="filter-select" id="dateToFilter" onchange="filterHoaDon()" placeholder="ƒê·∫øn ng√†y">
        <select class="filter-select" id="sortFilter" onchange="filterHoaDon()">
          <option value="newest">M·ªõi nh·∫•t</option>
          <option value="oldest">C≈© nh·∫•t</option>
          <option value="highest">Cao nh·∫•t</option>
          <option value="lowest">Th·∫•p nh·∫•t</option>
        </select>
        <button class="clear-filters" onclick="clearFilters()">
          <i class="fas fa-times"></i>
          X√≥a l·ªçc
        </button>
      </div>
    </div>

    <!-- Stats Overview -->
    <div class="stats-overview">
      <div class="stat-card">
        <div class="stat-icon total">
          <i class="fas fa-receipt"></i>
        </div>
        <div class="stat-info">
          <h3 id="statTotal">0</h3>
          <p>T·ªïng h√≥a ƒë∆°n</p>
        </div>
      </div>
      <div class="stat-card">
        <div class="stat-icon active">
          <i class="fas fa-money-bill-wave"></i>
        </div>
        <div class="stat-info">
          <h3 id="statRevenue">0</h3>
          <p>Doanh thu h√¥m nay</p>
        </div>
      </div>
      <div class="stat-card">
        <div class="stat-icon reception">
          <i class="fas fa-clock"></i>
        </div>
        <div class="stat-info">
          <h3 id="statPending">0</h3>
          <p>Ch·ªù thanh to√°n</p>
        </div>
      </div>
      <div class="stat-card">
        <div class="stat-icon service">
          <i class="fas fa-check-circle"></i>
        </div>
        <div class="stat-info">
          <h3 id="statPaid">0</h3>
          <p>ƒê√£ thanh to√°n</p>
        </div>
      </div>
      <div class="stat-card">
        <div class="stat-icon technical">
          <i class="fas fa-times-circle"></i>
        </div>
        <div class="stat-info">
          <h3 id="statCancelled">0</h3>
          <p>ƒê√£ h·ªßy</p>
        </div>
      </div>
      <div class="stat-card">
        <div class="stat-icon manager">
          <i class="fas fa-calendar-day"></i>
        </div>
        <div class="stat-info">
          <h3 id="statToday">0</h3>
          <p>H√≥a ƒë∆°n h√¥m nay</p>
        </div>
      </div>
      <div class="stat-card">
        <div class="stat-icon security">
          <i class="fas fa-calendar-week"></i>
        </div>
        <div class="stat-info">
          <h3 id="statWeek">0</h3>
          <p>Tu·∫ßn n√†y</p>
        </div>
      </div>
      <div class="stat-card">
        <div class="stat-icon fulltime">
          <i class="fas fa-calendar-month"></i>
        </div>
        <div class="stat-info">
          <h3 id="statMonth">0</h3>
          <p>Th√°ng n√†y</p>
        </div>
      </div>
    </div>

    <!-- HoaDon Grid -->
    <div class="employees-grid" id="hoaDonGrid">
      {{#each hoadons}}
      <div class="employee-card" 
           data-id="{{this._id}}" 
           data-mahd="{{this.MaHoaDon}}"
           data-madp="{{this.MaDatPhong}}"
           data-tongtien="{{this.TongTien}}" 
           data-status="{{this.TrangThai}}" 
           data-date="{{formatDate this.ThoiGianTao}}">
        <div class="employee-image">
          <div class="employee-avatar-placeholder bill">
            <i class="fas fa-receipt"></i>
          </div>
          <div class="employee-overlay">
            <div class="employee-actions">
              <button class="btn-edit" onclick="viewHoaDonDetail('{{this.MaHoaDon}}')">
                <i class="fas fa-eye"></i>
              </button>
              <button class="btn-edit" onclick="editHoaDon('{{this.MaHoaDon}}')">
                <i class="fas fa-edit"></i>
              </button>
              <button class="btn-delete" onclick="deleteHoaDon('{{this._id}}', '{{this.MaHoaDon}}')">
                <i class="fas fa-trash"></i>
              </button>
              {{#if (eq this.TrangThai "Ch∆∞a thanh to√°n")}}
              <button class="btn-primary" onclick="thanhToanHoaDon('{{this.MaHoaDon}}')">
                <i class="fas fa-credit-card"></i>
              </button>
              {{/if}}
            </div>
          </div>
          <div class="employee-badge {{this.TrangThai}}">
            {{this.TrangThai}}
          </div>
          <div class="employee-status {{#if (eq this.TrangThai 'ƒê√£ thanh to√°n')}}active{{else if (eq this.TrangThai 'Ch∆∞a thanh to√°n')}}onleave{{else}}inactive{{/if}}">
            {{formatCurrency this.TongTien}}
          </div>
        </div>

        <div class="employee-content">
          <h3 class="employee-name">HD{{this.MaHoaDon}}</h3>
          <p class="employee-code">ƒê·∫∑t ph√≤ng: {{this.MaDatPhong}}</p>

          <div class="employee-details">
            <div class="detail-item">
              <i class="fas fa-calendar-alt"></i>
              <span>{{formatDate this.ThoiGianTao}}</span>
            </div>
            <div class="detail-item">
              <i class="fas fa-money-bill-wave"></i>
              <span>{{formatCurrency this.TongTien}}</span>
            </div>
            <div class="detail-item">
              <i class="fas fa-user"></i>
              <span>KH: {{this.MaKH}}</span>
            </div>
            <div class="detail-item">
              <i class="fas fa-door-open"></i>
              <span>Ph√≤ng: {{this.MaPhong}}</span>
            </div>
            {{#if this.ThoiGianBatDau}}
            <div class="detail-item">
              <i class="fas fa-play-circle"></i>
              <span>B·∫Øt ƒë·∫ßu: {{formatTime this.ThoiGianBatDau}}</span>
            </div>
            {{/if}}
            {{#if this.ThoiGianKetThuc}}
            <div class="detail-item">
              <i class="fas fa-stop-circle"></i>
              <span>K·∫øt th√∫c: {{formatTime this.ThoiGianKetThuc}}</span>
            </div>
            {{/if}}
          </div>

          <!-- Chi ti·∫øt d·ªãch v·ª• -->
          <div class="service-breakdown">
            <h4>D·ªãch v·ª• s·ª≠ d·ª•ng:</h4>
            {{#each this.ChiTiet}}
            <div class="service-item">
              <span class="service-name">{{this.TenHang}}</span>
              <span class="service-quantity">x{{this.SoLuong}}</span>
              <span class="service-price">{{formatCurrency this.ThanhTien}}</span>
            </div>
            {{/each}}
          </div>
        </div>
      </div>
      {{/each}}
    </div>

    <!-- Empty State -->
    <div class="empty-state" id="emptyState" style="{{#if hoadons.length}}display: none;{{else}}display: block;{{/if}}">
      <div class="empty-icon">üßæ</div>
      <h3>Kh√¥ng t√¨m th·∫•y h√≥a ƒë∆°n</h3>
      <p>Th·ª≠ thay ƒë·ªïi b·ªô l·ªçc ho·∫∑c t·∫°o h√≥a ƒë∆°n m·ªõi</p>
      <button class="btn-primary" onclick="openHoaDonModal()">
        <i class="fas fa-plus"></i>
        T·∫°o h√≥a ƒë∆°n ƒë·∫ßu ti√™n
      </button>
    </div>
  </div>

  <!-- HoaDon Modal -->
  <div class="modal-overlay" id="hoaDonModal" style="display: none;">
    <div class="modal-container large">
      <div class="modal-header">
        <h2 id="modalTitle">T·∫°o h√≥a ƒë∆°n m·ªõi</h2>
        <button class="modal-close" onclick="closeHoaDonModal()">
          <i class="fas fa-times"></i>
        </button>
      </div>

      <div class="modal-body">
        <form id="hoaDonForm" onsubmit="saveHoaDon(event)">
          <input type="hidden" id="hoaDonId">
          <input type="hidden" id="hoaDonMaHD">

          <div class="form-grid">
            <div class="form-group">
              <label for="datPhongSelect">ƒê·∫∑t ph√≤ng *</label>
              <select id="datPhongSelect" required onchange="loadDatPhongInfo()">
                <option value="">Ch·ªçn ƒë·∫∑t ph√≤ng</option>
                {{#each datphongs}}
                <option value="{{this.MaDatPhong}}" data-makh="{{this.MaKH}}" data-maphong="{{this.MaPhong}}">
                  {{this.MaDatPhong}} - Ph√≤ng {{this.MaPhong}}
                </option>
                {{/each}}
              </select>
            </div>

            <div class="form-group">
              <label for="maKH">M√£ kh√°ch h√†ng</label>
              <input type="text" id="maKH" readonly>
            </div>

            <div class="form-group">
              <label for="maPhong">M√£ ph√≤ng</label>
              <input type="text" id="maPhong" readonly>
            </div>

            <div class="form-group">
              <label for="thoiGianBatDau">Th·ªùi gian b·∫Øt ƒë·∫ßu</label>
              <input type="datetime-local" id="thoiGianBatDau" readonly>
            </div>

            <div class="form-group">
              <label for="thoiGianKetThuc">Th·ªùi gian k·∫øt th√∫c</label>
              <input type="datetime-local" id="thoiGianKetThuc">
            </div>

            <div class="form-group">
              <label for="hoaDonStatus">Tr·∫°ng th√°i *</label>
              <select id="hoaDonStatus" required>
                <option value="Ch∆∞a thanh to√°n">Ch∆∞a thanh to√°n</option>
                <option value="ƒê√£ thanh to√°n">ƒê√£ thanh to√°n</option>
                <option value="ƒê√£ h·ªßy">ƒê√£ h·ªßy</option>
              </select>
            </div>
          </div>

          <!-- Danh s√°ch d·ªãch v·ª• -->
          <div class="services-section">
            <h3>D·ªãch v·ª• s·ª≠ d·ª•ng</h3>
            <div class="service-controls">
              <select id="matHangSelect">
                <option value="">Ch·ªçn m·∫∑t h√†ng</option>
                {{#each mathangs}}
                <option value="{{this.MaHang}}" data-dongia="{{this.DonGia}}" data-dvt="{{this.DonViTinh}}">
                  {{this.TenHang}} - {{formatCurrency this.DonGia}}/{{this.DonViTinh}}
                </option>
                {{/each}}
              </select>
              <input type="number" id="soLuong" placeholder="S·ªë l∆∞·ª£ng" min="1" value="1">
              <button type="button" class="btn-secondary" onclick="addService()">
                <i class="fas fa-plus"></i> Th√™m
              </button>
            </div>

            <div class="services-list" id="servicesList">
              <!-- Danh s√°ch d·ªãch v·ª• s·∫Ω ƒë∆∞·ª£c th√™m v√†o ƒë√¢y -->
            </div>
          </div>

          <!-- T·ªïng ti·ªÅn -->
          <div class="total-section">
            <div class="total-row">
              <span>Ti·ªÅn ph√≤ng:</span>
              <span id="tienPhong">0</span>
            </div>
            <div class="total-row">
              <span>Ti·ªÅn d·ªãch v·ª•:</span>
              <span id="tienDichVu">0</span>
            </div>
            <div class="total-row grand-total">
              <span><strong>T·ªïng c·ªông:</strong></span>
              <span id="tongTien"><strong>0</strong></span>
            </div>
          </div>
        </form>
      </div>

      <div class="modal-footer">
        <button class="btn-secondary" type="button" onclick="closeHoaDonModal()">H·ªßy</button>
        <button class="btn-primary" type="submit" form="hoaDonForm">L∆∞u h√≥a ƒë∆°n</button>
      </div>
    </div>
  </div>

  <!-- Chi ti·∫øt h√≥a ƒë∆°n Modal -->
  <div class="modal-overlay" id="detailModal" style="display: none;">
    <div class="modal-container">
      <div class="modal-header">
        <h2>Chi ti·∫øt h√≥a ƒë∆°n</h2>
        <button class="modal-close" onclick="closeDetailModal()">
          <i class="fas fa-times"></i>
        </button>
      </div>
      <div class="modal-body" id="detailContent">
        <!-- N·ªôi dung chi ti·∫øt s·∫Ω ƒë∆∞·ª£c ƒëi·ªÅn b·∫±ng JS -->
      </div>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
  // ===== CONFIGURATION & STATE =====
  let allHoaDons = [];
  let filteredHoaDons = [];
  let selectedServices = [];
  let currentRoomPrice = 0;

  // ===== STATISTICS CALCULATION =====
  function calculateStatistics() {
    const hoaDons = allHoaDons;
    
    const totalHoaDons = hoaDons.length;
    const today = new Date().toDateString();
    const todayRevenue = hoaDons
      .filter(hd => new Date(hd.getAttribute('data-date')).toDateString() === today && 
                    hd.getAttribute('data-status') === 'ƒê√£ thanh to√°n')
      .reduce((sum, hd) => sum + parseFloat(hd.getAttribute('data-tongtien')), 0);
    
    const countPending = hoaDons.filter(hd => hd.getAttribute('data-status') === 'Ch∆∞a thanh to√°n').length;
    const countPaid = hoaDons.filter(hd => hd.getAttribute('data-status') === 'ƒê√£ thanh to√°n').length;
    const countCancelled = hoaDons.filter(hd => hd.getAttribute('data-status') === 'ƒê√£ h·ªßy').length;
    const countToday = hoaDons.filter(hd => 
      new Date(hd.getAttribute('data-date')).toDateString() === today
    ).length;

    updateStatCard('#statTotal', totalHoaDons);
    updateStatCard('#statRevenue', formatCurrency(todayRevenue));
    updateStatCard('#statPending', countPending);
    updateStatCard('#statPaid', countPaid);
    updateStatCard('#statCancelled', countCancelled);
    updateStatCard('#statToday', countToday);
    updateStatCard('#statWeek', Math.floor(countToday * 1.5)); // Gi·∫£ l·∫≠p
    updateStatCard('#statMonth', Math.floor(countToday * 6)); // Gi·∫£ l·∫≠p
  }

  function updateStatCard(selector, value) {
    const element = document.querySelector(selector);
    if (element) {
      element.textContent = value;
    }
  }

  // ===== FORMAT FUNCTIONS =====
  function formatCurrency(amount) {
    if (typeof amount === 'string') {
      amount = parseFloat(amount) || 0;
    }
    return new Intl.NumberFormat('vi-VN', {
      style: 'currency',
      currency: 'VND'
    }).format(amount);
  }

  function formatDate(dateString) {
    if (!dateString) return 'N/A';
    const date = new Date(dateString);
    return date.toLocaleDateString('vi-VN');
  }

  function formatTime(dateString) {
    if (!dateString) return 'N/A';
    const date = new Date(dateString);
    return date.toLocaleTimeString('vi-VN', { 
      hour: '2-digit', 
      minute: '2-digit' 
    });
  }

  // Helper function cho Handlebars
  function eq(a, b) {
    return a === b;
  }

  // ===== HOA DON MANAGEMENT =====
  function openHoaDonModal(hoaDonData = null) {
    document.getElementById('modalTitle').textContent = hoaDonData ? 'Ch·ªânh s·ª≠a h√≥a ƒë∆°n' : 'T·∫°o h√≥a ƒë∆°n m·ªõi';
    document.getElementById('hoaDonModal').style.display = 'flex';
    document.body.style.overflow = 'hidden';

    if (hoaDonData) {
      // ƒêi·ªÅn th√¥ng tin h√≥a ƒë∆°n
      document.getElementById('hoaDonId').value = hoaDonData._id || '';
      document.getElementById('hoaDonMaHD').value = hoaDonData.MaHoaDon || '';
      document.getElementById('datPhongSelect').value = hoaDonData.MaDatPhong || '';
      document.getElementById('hoaDonStatus').value = hoaDonData.TrangThai || 'Ch∆∞a thanh to√°n';
      
      // Load th√¥ng tin ƒë·∫∑t ph√≤ng
      loadDatPhongInfo();
      
      // Load d·ªãch v·ª•
      selectedServices = hoaDonData.ChiTiet || [];
      renderServicesList();
      calculateTotal();
    } else {
      resetHoaDonForm();
    }
  }

  function closeHoaDonModal() {
    document.getElementById('hoaDonModal').style.display = 'none';
    document.body.style.overflow = 'auto';
  }

  function resetHoaDonForm() {
    document.getElementById('hoaDonForm').reset();
    document.getElementById('hoaDonId').value = '';
    document.getElementById('hoaDonMaHD').value = '';
    document.getElementById('hoaDonStatus').value = 'Ch∆∞a thanh to√°n';
    selectedServices = [];
    renderServicesList();
    calculateTotal();
  }

  function loadDatPhongInfo() {
    const selectedOption = document.querySelector('#datPhongSelect option:checked');
    if (selectedOption && selectedOption.value) {
      document.getElementById('maKH').value = selectedOption.getAttribute('data-makh') || '';
      document.getElementById('maPhong').value = selectedOption.getAttribute('data-maphong') || '';
      
      // Load th√¥ng tin th·ªùi gian t·ª´ API
      fetch(`/api/datphong/${selectedOption.value}`)
        .then(response => response.json())
        .then(datPhong => {
          document.getElementById('thoiGianBatDau').value = formatDateTimeLocal(datPhong.ThoiGianBatDau);
          document.getElementById('thoiGianKetThuc').value = formatDateTimeLocal(datPhong.ThoiGianKetThuc);
          
          // T√≠nh ti·ªÅn ph√≤ng
          calculateRoomPrice();
        })
        .catch(error => {
          console.error('L·ªói khi l·∫•y th√¥ng tin ƒë·∫∑t ph√≤ng:', error);
        });
    }
  }

  function formatDateTimeLocal(dateString) {
    if (!dateString) return '';
    const date = new Date(dateString);
    return date.toISOString().slice(0, 16);
  }

  function calculateRoomPrice() {
    // Gi·∫£ l·∫≠p t√≠nh ti·ªÅn ph√≤ng d·ª±a tr√™n th·ªùi gian
    const start = new Date(document.getElementById('thoiGianBatDau').value);
    const end = new Date(document.getElementById('thoiGianKetThuc').value);
    
    if (start && end) {
      const hours = (end - start) / (1000 * 60 * 60);
      currentRoomPrice = hours * 100000; // 100k/gi·ªù
      document.getElementById('tienPhong').textContent = formatCurrency(currentRoomPrice);
      calculateTotal();
    }
  }

  function addService() {
    const matHangSelect = document.getElementById('matHangSelect');
    const soLuong = document.getElementById('soLuong');
    
    if (!matHangSelect.value || !soLuong.value || soLuong.value < 1) {
      showError('Vui l√≤ng ch·ªçn m·∫∑t h√†ng v√† s·ªë l∆∞·ª£ng');
      return;
    }

    const selectedOption = matHangSelect.options[matHangSelect.selectedIndex];
    const service = {
      MaHang: matHangSelect.value,
      TenHang: selectedOption.text.split(' - ')[0],
      SoLuong: parseInt(soLuong.value),
      DonGia: parseFloat(selectedOption.getAttribute('data-dongia')),
      DonViTinh: selectedOption.getAttribute('data-dvt'),
      ThanhTien: parseInt(soLuong.value) * parseFloat(selectedOption.getAttribute('data-dongia'))
    };

    selectedServices.push(service);
    renderServicesList();
    calculateTotal();
    
    // Reset form
    matHangSelect.value = '';
    soLuong.value = 1;
  }

  function removeService(index) {
    selectedServices.splice(index, 1);
    renderServicesList();
    calculateTotal();
  }

  function renderServicesList() {
    const servicesList = document.getElementById('servicesList');
    servicesList.innerHTML = '';

    selectedServices.forEach((service, index) => {
      const serviceElement = document.createElement('div');
      serviceElement.className = 'service-item-row';
      serviceElement.innerHTML = `
        <div class="service-info">
          <span class="service-name">${service.TenHang}</span>
          <span class="service-details">${service.SoLuong} ${service.DonViTinh} x ${formatCurrency(service.DonGia)}</span>
        </div>
        <div class="service-actions">
          <span class="service-total">${formatCurrency(service.ThanhTien)}</span>
          <button type="button" class="btn-delete" onclick="removeService(${index})">
            <i class="fas fa-times"></i>
          </button>
        </div>
      `;
      servicesList.appendChild(serviceElement);
    });
  }

  function calculateTotal() {
    const serviceTotal = selectedServices.reduce((sum, service) => sum + service.ThanhTien, 0);
    const total = currentRoomPrice + serviceTotal;

    document.getElementById('tienDichVu').textContent = formatCurrency(serviceTotal);
    document.getElementById('tongTien').textContent = formatCurrency(total);
  }

  async function saveHoaDon(event) {
    event.preventDefault();

    const hoaDonId = document.getElementById('hoaDonId').value;
    const isEdit = !!hoaDonId;

    const formData = {
      MaDatPhong: document.getElementById('datPhongSelect').value,
      TrangThai: document.getElementById('hoaDonStatus').value,
      TongTien: parseFloat(document.getElementById('tongTien').textContent.replace(/[^\d]/g, '')),
      ChiTiet: selectedServices,
      ThoiGianKetThuc: document.getElementById('thoiGianKetThuc').value || new Date().toISOString()
    };

    // Validation
    if (!formData.MaDatPhong) {
      showError('Vui l√≤ng ch·ªçn ƒë·∫∑t ph√≤ng');
      return;
    }

    if (selectedServices.length === 0 && currentRoomPrice === 0) {
      showError('H√≥a ƒë∆°n ph·∫£i c√≥ √≠t nh·∫•t m·ªôt d·ªãch v·ª• ho·∫∑c ti·ªÅn ph√≤ng');
      return;
    }

    const url = isEdit ? `/api/hoadon/${document.getElementById('hoaDonMaHD').value}` : '/api/hoadon';
    const method = isEdit ? 'PUT' : 'POST';

    try {
      Swal.fire({
        title: 'ƒêang l∆∞u h√≥a ƒë∆°n...',
        text: 'Vui l√≤ng ch·ªù trong gi√¢y l√°t',
        allowOutsideClick: false,
        didOpen: () => Swal.showLoading()
      });

      const response = await fetch(url, {
        method: method,
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(formData)
      });

      const result = await response.json();
      if (!response.ok) throw new Error(result.error || 'L·ªói server');

      Swal.fire({
        icon: 'success',
        title: 'Th√†nh c√¥ng!',
        text: result.message || `H√≥a ƒë∆°n ƒë√£ ƒë∆∞·ª£c ${isEdit ? 'c·∫≠p nh·∫≠t' : 't·∫°o'} th√†nh c√¥ng!`,
        timer: 1500,
        showConfirmButton: false
      });

      setTimeout(() => {
        location.reload();
      }, 1500);

    } catch (error) {
      console.error('‚ùå L·ªói khi l∆∞u h√≥a ƒë∆°n:', error);
      Swal.fire({
        icon: 'error',
        title: 'L·ªói!',
        text: error.message || 'Kh√¥ng th·ªÉ l∆∞u h√≥a ƒë∆°n',
        confirmButtonColor: '#667eea'
      });
    }
  }

  async function thanhToanHoaDon(maHoaDon) {
    try {
      const response = await fetch(`/api/hoadon/${maHoaDon}/thanhtoan`, {
        method: 'PUT'
      });

      if (response.ok) {
        Swal.fire({
          icon: 'success',
          title: 'Th√†nh c√¥ng!',
          text: 'H√≥a ƒë∆°n ƒë√£ ƒë∆∞·ª£c thanh to√°n',
          timer: 1500,
          showConfirmButton: false
        });
        setTimeout(() => location.reload(), 1500);
      } else {
        throw new Error('L·ªói khi thanh to√°n');
      }
    } catch (error) {
      Swal.fire({
        icon: 'error',
        title: 'L·ªói!',
        text: 'Kh√¥ng th·ªÉ thanh to√°n h√≥a ƒë∆°n'
      });
    }
  }

  async function viewHoaDonDetail(maHoaDon) {
    try {
      const response = await fetch(`/api/hoadon/${maHoaDon}`);
      const hoaDon = await response.json();

      const detailContent = document.getElementById('detailContent');
      detailContent.innerHTML = `
        <div class="invoice-detail">
          <div class="invoice-header">
            <h3>H√≥a ƒë∆°n: ${hoaDon.MaHoaDon}</h3>
            <span class="status-badge ${hoaDon.TrangThai}">${hoaDon.TrangThai}</span>
          </div>
          
          <div class="invoice-info">
            <div class="info-row">
              <span>Kh√°ch h√†ng:</span>
              <span>${hoaDon.MaKH}</span>
            </div>
            <div class="info-row">
              <span>Ph√≤ng:</span>
              <span>${hoaDon.MaPhong}</span>
            </div>
            <div class="info-row">
              <span>Th·ªùi gian:</span>
              <span>${formatDate(hoaDon.ThoiGianTao)} ${formatTime(hoaDon.ThoiGianTao)}</span>
            </div>
          </div>

          <div class="invoice-items">
            <h4>Chi ti·∫øt d·ªãch v·ª•:</h4>
            ${hoaDon.ChiTiet.map(item => `
              <div class="item-row">
                <span>${item.TenHang}</span>
                <span>${item.SoLuong} x ${formatCurrency(item.DonGia)}</span>
                <span>${formatCurrency(item.ThanhTien)}</span>
              </div>
            `).join('')}
          </div>

          <div class="invoice-total">
            <div class="total-row">
              <span>T·ªïng c·ªông:</span>
              <span>${formatCurrency(hoaDon.TongTien)}</span>
            </div>
          </div>
        </div>
      `;

      document.getElementById('detailModal').style.display = 'flex';
    } catch (error) {
      showError('Kh√¥ng th·ªÉ t·∫£i chi ti·∫øt h√≥a ƒë∆°n');
    }
  }

  function closeDetailModal() {
    document.getElementById('detailModal').style.display = 'none';
  }

  // ===== FILTER & SEARCH =====
  function filterHoaDon() {
    const searchTerm = document.getElementById('searchInput').value.toLowerCase();
    const statusFilter = document.getElementById('statusFilter').value;
    const dateFrom = document.getElementById('dateFromFilter').value;
    const dateTo = document.getElementById('dateToFilter').value;
    const sortFilter = document.getElementById('sortFilter').value;

    filteredHoaDons = allHoaDons.filter(card => {
      const maHD = card.getAttribute('data-mahd').toLowerCase();
      const maDP = card.getAttribute('data-madp').toLowerCase();
      const status = card.getAttribute('data-status');
      const date = card.getAttribute('data-date');

      const matchesSearch = !searchTerm || 
        maHD.includes(searchTerm) || 
        maDP.includes(searchTerm);
      const matchesStatus = !statusFilter || status === statusFilter;
      const matchesDate = (!dateFrom || date >= dateFrom) && 
                         (!dateTo || date <= dateTo);

      const shouldShow = matchesSearch && matchesStatus && matchesDate;
      card.style.display = shouldShow ? 'block' : 'none';
      return shouldShow;
    });

    // Sort
    sortHoaDons(sortFilter);
    calculateFilteredStatistics();
    toggleEmptyState(filteredHoaDons.length === 0);
  }

  function sortHoaDons(sortType) {
    const container = document.getElementById('hoaDonGrid');
    const cards = Array.from(container.querySelectorAll('.employee-card'));

    cards.sort((a, b) => {
      switch (sortType) {
        case 'newest':
          return new Date(b.getAttribute('data-date')) - new Date(a.getAttribute('data-date'));
        case 'oldest':
          return new Date(a.getAttribute('data-date')) - new Date(b.getAttribute('data-date'));
        case 'highest':
          return parseFloat(b.getAttribute('data-tongtien')) - parseFloat(a.getAttribute('data-tongtien'));
        case 'lowest':
          return parseFloat(a.getAttribute('data-tongtien')) - parseFloat(b.getAttribute('data-tongtien'));
        default:
          return 0;
      }
    });

    cards.forEach(card => container.appendChild(card));
  }

  function clearFilters() {
    document.getElementById('searchInput').value = '';
    document.getElementById('statusFilter').value = '';
    document.getElementById('dateFromFilter').value = '';
    document.getElementById('dateToFilter').value = '';
    document.getElementById('sortFilter').value = 'newest';

    filterHoaDon();
  }

  function toggleEmptyState(show) {
    const emptyState = document.getElementById('emptyState');
    const grid = document.getElementById('hoaDonGrid');

    if (!emptyState || !grid) return;

    if (show) {
      grid.style.display = 'none';
      emptyState.style.display = 'block';
    } else {
      grid.style.display = 'grid';
      emptyState.style.display = 'none';
    }
  }

  // ===== UTILITY FUNCTIONS =====
  function showError(message) {
    Swal.fire({
      icon: 'warning',
      title: 'Thi·∫øu th√¥ng tin',
      text: message,
      confirmButtonColor: '#667eea'
    });
  }

  // ===== INITIALIZATION =====
  document.addEventListener('DOMContentLoaded', function () {
    allHoaDons = Array.from(document.querySelectorAll('.employee-card'));
    filteredHoaDons = [...allHoaDons];
    
    calculateStatistics();
    
    // Event listeners
    document.getElementById('thoiGianKetThuc').addEventListener('change', calculateRoomPrice);
  });
</script>

<style>
.employee-avatar-placeholder.bill {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
}

.employee-avatar-placeholder.bill i {
  font-size: 2rem;
}

.service-breakdown {
  margin-top: 10px;
  padding-top: 10px;
  border-top: 1px solid #eee;
}

.service-item {
  display: flex;
  justify-content: between;
  margin-bottom: 5px;
  font-size: 0.9em;
}

.service-name {
  flex: 1;
}

.service-quantity {
  margin: 0 10px;
  color: #666;
}

.service-price {
  font-weight: bold;
  color: #2d3748;
}

.modal-container.large {
  max-width: 800px;
}

.services-section {
  margin: 20px 0;
  padding: 20px;
  background: #f7fafc;
  border-radius: 8px;
}

.service-controls {
  display: flex;
  gap: 10px;
  margin-bottom: 15px;
}

.service-controls select,
.service-controls input {
  flex: 1;
}

.services-list {
  max-height: 200px;
  overflow-y: auto;
}

.service-item-row {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px;
  background: white;
  margin-bottom: 5px;
  border-radius: 4px;
  border: 1px solid #e2e8f0;
}

.service-info {
  flex: 1;
}

.service-details {
  font-size: 0.8em;
  color: #718096;
  display: block;
}

.service-actions {
  display: flex;
  align-items: center;
  gap: 10px;
}

.total-section {
  margin-top: 20px;
  padding: 15px;
  background: #edf2f7;
  border-radius: 8px;
}

.total-row {
  display: flex;
  justify-content: space-between;
  margin-bottom: 8px;
}

.grand-total {
  border-top: 2px solid #cbd5e0;
  padding-top: 8px;
  margin-top: 8px;
  font-size: 1.1em;
}

.invoice-detail .invoice-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
}

.status-badge {
  padding: 4px 12px;
  border-radius: 20px;
  font-size: 0.8em;
  font-weight: bold;
}

.status-badge.ƒê√£\ thanh\ to√°n {
  background: #c6f6d5;
  color: #22543d;
}

.status-badge.Ch∆∞a\ thanh\ to√°n {
  background: #fed7d7;
  color: #742a2a;
}

.status-badge.ƒê√£\ h·ªßy {
  background: #e2e8f0;
  color: #4a5568;
}

.invoice-info {
  margin-bottom: 20px;
}

.info-row {
  display: flex;
  justify-content: space-between;
  margin-bottom: 8px;
  padding: 4px 0;
}

.invoice-items {
  margin-bottom: 20px;
}

.item-row {
  display: flex;
  justify-content: space-between;
  padding: 8px 0;
  border-bottom: 1px solid #e2e8f0;
}
</style>