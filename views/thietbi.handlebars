<div class="main-content">
  <div class="admin-dashboard">
    <!-- Header Premium -->
    <div class="dashboard-header">
      <div class="header-content">
        <div class="header-title">
          <div class="title-icon">üîß</div>
          <div>
            <h1>QU·∫¢N L√ù THI·∫æT B·ªä</h1>
            <p>Theo d√µi v√† qu·∫£n l√Ω thi·∫øt b·ªã ph√≤ng h√°t karaoke</p>
          </div>
        </div>
        <div class="header-actions">
          <button class="btn-primary" onclick="openThietBiModal()">
            <i class="fas fa-plus"></i>
            <span>Th√™m thi·∫øt b·ªã</span>
          </button>
          <button class="btn-secondary" onclick="openBaoTriModal()">
            <i class="fas fa-tools"></i>
            <span>Th√™m b·∫£o tr√¨</span>
          </button>
        </div>
      </div>
    </div>

    <!-- Search and Filter Bar -->
    <div class="search-filter-bar">
      <div class="search-box">
        <i class="fas fa-search"></i>
        <input type="text" id="searchInput" placeholder="T√¨m ki·∫øm thi·∫øt b·ªã..." onkeyup="filterThietBi()">
        <button class="search-btn" onclick="filterThietBi()">T√¨m ki·∫øm</button>
      </div>
      <div class="filter-controls">
        <select class="filter-select" id="phongFilter" onchange="filterThietBi()">
          <option value="">T·∫•t c·∫£ ph√≤ng</option>
          <option value="P101">P101</option>
          <option value="P102">P102</option>
          <option value="P103">P103</option>
          <option value="P201">P201</option>
          <option value="VIP01">VIP01</option>
          <option value="VIP02">VIP02</option>
        </select>
        <select class="filter-select" id="statusFilter" onchange="filterThietBi()">
          <option value="">T·∫•t c·∫£ t√¨nh tr·∫°ng</option>
          <option value="T·ªët">T·ªët</option>
          <option value="ƒêang b·∫£o tr√¨">ƒêang b·∫£o tr√¨</option>
          <option value="H·ªèng">H·ªèng</option>
          <option value="C·∫ßn s·ª≠a ch·ªØa">C·∫ßn s·ª≠a ch·ªØa</option>
        </select>
        <select class="filter-select" id="loaiFilter" onchange="filterThietBi()">
          <option value="">T·∫•t c·∫£ lo·∫°i</option>
          <option value="Micro">Micro</option>
          <option value="Loa">Loa</option>
          <option value="Amply">Amply</option>
          <option value="M√†n h√¨nh">M√†n h√¨nh</option>
          <option value="ƒêi·ªÅu h√≤a">ƒêi·ªÅu h√≤a</option>
          <option value="B√†n gh·∫ø">B√†n gh·∫ø</option>
        </select>
        <button class="clear-filters" onclick="clearFilters()">
          <i class="fas fa-times"></i>
          X√≥a l·ªçc
        </button>
      </div>
    </div>

    <!-- Stats Overview -->
    <div class="stats-overview">
      <div class="stat-card">
        <div class="stat-icon total">
          <i class="fas fa-microphone"></i>
        </div>
        <div class="stat-info">
          <h3 id="statTotal">0</h3>
          <p>T·ªïng thi·∫øt b·ªã</p>
        </div>
      </div>
      <div class="stat-card">
        <div class="stat-icon active">
          <i class="fas fa-check-circle"></i>
        </div>
        <div class="stat-info">
          <h3 id="statGood">0</h3>
          <p>Thi·∫øt b·ªã t·ªët</p>
        </div>
      </div>
      <div class="stat-card">
        <div class="stat-icon reception">
          <i class="fas fa-tools"></i>
        </div>
        <div class="stat-info">
          <h3 id="statMaintenance">0</h3>
          <p>ƒêang b·∫£o tr√¨</p>
        </div>
      </div>
      <div class="stat-card">
        <div class="stat-icon service">
          <i class="fas fa-exclamation-triangle"></i>
        </div>
        <div class="stat-info">
          <h3 id="statBroken">0</h3>
          <p>Thi·∫øt b·ªã h·ªèng</p>
        </div>
      </div>
      <div class="stat-card">
        <div class="stat-icon technical">
          <i class="fas fa-tv"></i>
        </div>
        <div class="stat-info">
          <h3 id="statMicro">0</h3>
          <p>Micro</p>
        </div>
      </div>
      <div class="stat-card">
        <div class="stat-icon manager">
          <i class="fas fa-volume-up"></i>
        </div>
        <div class="stat-info">
          <h3 id="statLoa">0</h3>
          <p>Loa</p>
        </div>
      </div>
      <div class="stat-card">
        <div class="stat-icon security">
          <i class="fas fa-desktop"></i>
        </div>
        <div class="stat-info">
          <h3 id="statScreen">0</h3>
          <p>M√†n h√¨nh</p>
        </div>
      </div>
      <div class="stat-card">
        <div class="stat-icon fulltime">
          <i class="fas fa-snowflake"></i>
        </div>
        <div class="stat-info">
          <h3 id="statAC">0</h3>
          <p>ƒêi·ªÅu h√≤a</p>
        </div>
      </div>
    </div>

    <!-- ThietBi Grid -->
    <div class="rooms-grid" id="thietBiGrid">
      {{#each thietbis}}
      <div class="room-card" 
           data-id="{{this._id}}" 
           data-matb="{{this.MaThietBi}}"
           data-maphong="{{this.MaPhong}}"
           data-tenthietbi="{{this.TenThietBi}}" 
           data-tinhtrang="{{this.TinhTrang}}" 
           data-loai="{{this.LoaiThietBi}}">
        <div class="room-image">
          {{#if this.LinkAnh}}
          <img src="{{this.LinkAnh}}" alt="{{this.TenThietBi}}">
          {{else}}
          <div class="employee-avatar-placeholder device {{this.LoaiThietBi}}">
            <i class="{{getDeviceIcon this.LoaiThietBi}}"></i>
          </div>
          {{/if}}
          <div class="room-overlay">
            <div class="room-actions">
              <button class="btn-edit" onclick="viewBaoTriHistory('{{this.MaThietBi}}')">
                <i class="fas fa-history"></i>
              </button>
              <button class="btn-edit" onclick="editThietBi('{{this.MaThietBi}}')">
                <i class="fas fa-edit"></i>
              </button>
              <button class="btn-delete" onclick="deleteThietBi('{{this._id}}', '{{this.TenThietBi}}')">
                <i class="fas fa-trash"></i>
              </button>
            </div>
          </div>
          <div class="room-badge {{this.LoaiThietBi}}">
            {{this.LoaiThietBi}}
          </div>
          <div class="room-status {{#if (eq this.TinhTrang 'T·ªët')}}active{{else if (eq this.TinhTrang 'ƒêang b·∫£o tr√¨')}}onleave{{else}}inactive{{/if}}">
            {{this.TinhTrang}}
          </div>
        </div>

        <div class="room-content">
          <h3 class="room-title">{{this.TenThietBi}}</h3>
          <p class="room-code">M√£: {{this.MaThietBi}}</p>

          <div class="room-details">
            <div class="detail-item">
              <i class="fas fa-door-open"></i>
              <span>Ph√≤ng: {{this.MaPhong}}</span>
            </div>
            <div class="detail-item">
              <i class="fas fa-calendar-alt"></i>
              <span>Ng√†y nh·∫≠p: {{formatDate this.NgayNhap}}</span>
            </div>
            {{#if this.HangSanXuat}}
            <div class="detail-item">
              <i class="fas fa-industry"></i>
              <span>H√£ng: {{this.HangSanXuat}}</span>
            </div>
            {{/if}}
            {{#if this.Model}}
            <div class="detail-item">
              <i class="fas fa-barcode"></i>
              <span>Model: {{this.Model}}</span>
            </div>
            {{/if}}
            {{#if this.GiaTri}}
            <div class="detail-item">
              <i class="fas fa-money-bill-wave"></i>
              <span>Gi√° tr·ªã: {{formatCurrency this.GiaTri}}</span>
            </div>
            {{/if}}
          </div>

          <!-- L·ªãch s·ª≠ b·∫£o tr√¨ g·∫ßn nh·∫•t -->
          {{#if this.BaoTriGanNhat}}
          <div class="maintenance-history">
            <h4>B·∫£o tr√¨ g·∫ßn nh·∫•t:</h4>
            <div class="maintenance-item">
              <span class="maintenance-date">{{formatDate this.BaoTriGanNhat.ThoiGian}}</span>
              <span class="maintenance-cost">{{formatCurrency this.BaoTriGanNhat.ChiPhi}}</span>
            </div>
            <p class="maintenance-desc">{{this.BaoTriGanNhat.MoTa}}</p>
          </div>
          {{/if}}

          <div class="room-footer">
            <span class="room-id">#{{this.MaThietBi}}</span>
            <button class="btn-status" onclick="toggleStatus('{{this._id}}', '{{this.TinhTrang}}')">
              <i class="fas fa-sync-alt"></i>
            </button>
          </div>
        </div>
      </div>
      {{/each}}
    </div>

    <!-- Empty State -->
    <div class="empty-state" id="emptyState" style="{{#if thietbis.length}}display: none;{{else}}display: block;{{/if}}">
      <div class="empty-icon">üîß</div>
      <h3>Kh√¥ng t√¨m th·∫•y thi·∫øt b·ªã</h3>
      <p>Th·ª≠ thay ƒë·ªïi b·ªô l·ªçc ho·∫∑c th√™m thi·∫øt b·ªã m·ªõi</p>
      <button class="btn-primary" onclick="openThietBiModal()">
        <i class="fas fa-plus"></i>
        Th√™m thi·∫øt b·ªã ƒë·∫ßu ti√™n
      </button>
    </div>
  </div>

  <!-- ThietBi Modal -->
  <div class="modal-overlay" id="thietBiModal" style="display: none;">
    <div class="modal-container">
      <div class="modal-header">
        <h2 id="modalTitle">Th√™m thi·∫øt b·ªã m·ªõi</h2>
        <button class="modal-close" onclick="closeThietBiModal()">
          <i class="fas fa-times"></i>
        </button>
      </div>

      <div class="modal-body">
        <form id="thietBiForm" onsubmit="saveThietBi(event)">
          <input type="hidden" id="thietBiId">
          <input type="hidden" id="thietBiMaTB">

          <div class="form-grid">
            <div class="form-group">
              <label for="thietBiName">T√™n thi·∫øt b·ªã *</label>
              <input type="text" id="thietBiName" required placeholder="Nh·∫≠p t√™n thi·∫øt b·ªã">
            </div>

            <div class="form-group">
              <label for="thietBiMaPhong">M√£ ph√≤ng *</label>
              <select id="thietBiMaPhong" required>
                <option value="">Ch·ªçn ph√≤ng</option>
                <option value="P101">P101</option>
                <option value="P102">P102</option>
                <option value="P103">P103</option>
                <option value="P201">P201</option>
                <option value="VIP01">VIP01</option>
                <option value="VIP02">VIP02</option>
              </select>
            </div>

            <div class="form-group">
              <label for="thietBiLoai">Lo·∫°i thi·∫øt b·ªã *</label>
              <select id="thietBiLoai" required>
                <option value="">Ch·ªçn lo·∫°i thi·∫øt b·ªã</option>
                <option value="Micro">Micro</option>
                <option value="Loa">Loa</option>
                <option value="Amply">Amply</option>
                <option value="M√†n h√¨nh">M√†n h√¨nh</option>
                <option value="ƒêi·ªÅu h√≤a">ƒêi·ªÅu h√≤a</option>
                <option value="B√†n gh·∫ø">B√†n gh·∫ø</option>
                <option value="Kh√°c">Kh√°c</option>
              </select>
            </div>

            <div class="form-group">
              <label for="thietBiStatus">T√¨nh tr·∫°ng *</label>
              <select id="thietBiStatus" required>
                <option value="T·ªët">T·ªët</option>
                <option value="ƒêang b·∫£o tr√¨">ƒêang b·∫£o tr√¨</option>
                <option value="C·∫ßn s·ª≠a ch·ªØa">C·∫ßn s·ª≠a ch·ªØa</option>
                <option value="H·ªèng">H·ªèng</option>
              </select>
            </div>

            <div class="form-group">
              <label for="thietBiHangSX">H√£ng s·∫£n xu·∫•t</label>
              <input type="text" id="thietBiHangSX" placeholder="Nh·∫≠p h√£ng s·∫£n xu·∫•t">
            </div>

            <div class="form-group">
              <label for="thietBiModel">Model</label>
              <input type="text" id="thietBiModel" placeholder="Nh·∫≠p model">
            </div>

            <div class="form-group">
              <label for="thietBiGiaTri">Gi√° tr·ªã (VND)</label>
              <input type="number" id="thietBiGiaTri" placeholder="Nh·∫≠p gi√° tr·ªã">
            </div>

            <div class="form-group">
              <label for="thietBiNgayNhap">Ng√†y nh·∫≠p</label>
              <input type="date" id="thietBiNgayNhap">
            </div>

            <div class="form-group">
              <label for="thietBiBaoHanh">Th·ªùi gian b·∫£o h√†nh (th√°ng)</label>
              <input type="number" id="thietBiBaoHanh" placeholder="S·ªë th√°ng b·∫£o h√†nh">
            </div>

            <div class="form-group">
              <label for="thietBiGhiChu">Ghi ch√∫</label>
              <textarea id="thietBiGhiChu" placeholder="Nh·∫≠p ghi ch√∫" rows="2"></textarea>
            </div>
          </div>

          <div class="form-group full-width">
            <label for="thietBiAvatar">Link ·∫£nh thi·∫øt b·ªã</label>
            <input type="text" id="thietBiAvatar" placeholder="URL h√¨nh ·∫£nh" oninput="updateThietBiPreview(this.value)">
          </div>

          <div class="form-group full-width" id="thietBiPreviewContainer">
            <label>Preview ·∫£nh thi·∫øt b·ªã</label>
            <div class="image-preview" id="thietBiPreview">
              <i class="fas fa-microphone"></i>
              <p>Preview s·∫Ω hi·ªÉn th·ªã ·ªü ƒë√¢y</p>
            </div>
          </div>
        </form>
      </div>

      <div class="modal-footer">
        <button class="btn-secondary" type="button" onclick="closeThietBiModal()">H·ªßy</button>
        <button class="btn-primary" type="submit" form="thietBiForm">L∆∞u th√¥ng tin</button>
      </div>
    </div>
  </div>

  <!-- BaoTri Modal -->
  <div class="modal-overlay" id="baoTriModal" style="display: none;">
    <div class="modal-container">
      <div class="modal-header">
        <h2>Th√™m l·ªãch s·ª≠ b·∫£o tr√¨</h2>
        <button class="modal-close" onclick="closeBaoTriModal()">
          <i class="fas fa-times"></i>
        </button>
      </div>

      <div class="modal-body">
        <form id="baoTriForm" onsubmit="saveBaoTri(event)">
          <input type="hidden" id="baoTriId">

          <div class="form-grid">
            <div class="form-group">
              <label for="baoTriMaThietBi">Thi·∫øt b·ªã *</label>
              <select id="baoTriMaThietBi" required onchange="updateThietBiInfo()">
                <option value="">Ch·ªçn thi·∫øt b·ªã</option>
                {{#each thietbis}}
                <option value="{{this.MaThietBi}}" data-tenthietbi="{{this.TenThietBi}}" data-maphong="{{this.MaPhong}}">
                  {{this.MaThietBi}} - {{this.TenThietBi}} ({{this.MaPhong}})
                </option>
                {{/each}}
              </select>
            </div>

            <div class="form-group">
              <label for="baoTriTenThietBi">T√™n thi·∫øt b·ªã</label>
              <input type="text" id="baoTriTenThietBi" readonly>
            </div>

            <div class="form-group">
              <label for="baoTriMaPhong">Ph√≤ng</label>
              <input type="text" id="baoTriMaPhong" readonly>
            </div>

            <div class="form-group">
              <label for="baoTriChiPhi">Chi ph√≠ (VND) *</label>
              <input type="number" id="baoTriChiPhi" required placeholder="Nh·∫≠p chi ph√≠ b·∫£o tr√¨">
            </div>

            <div class="form-group">
              <label for="baoTriThoiGian">Th·ªùi gian b·∫£o tr√¨ *</label>
              <input type="datetime-local" id="baoTriThoiGian" required>
            </div>

            <div class="form-group full-width">
              <label for="baoTriMoTa">M√¥ t·∫£ b·∫£o tr√¨ *</label>
              <textarea id="baoTriMoTa" required placeholder="M√¥ t·∫£ c√¥ng vi·ªác b·∫£o tr√¨/s·ª≠a ch·ªØa" rows="3"></textarea>
            </div>

            <div class="form-group full-width">
              <label for="baoTriNhanVien">Nh√¢n vi√™n th·ª±c hi·ªán</label>
              <input type="text" id="baoTriNhanVien" placeholder="T√™n nh√¢n vi√™n b·∫£o tr√¨">
            </div>

            <div class="form-group full-width">
              <label for="baoTriKetQua">K·∫øt qu·∫£ b·∫£o tr√¨</label>
              <select id="baoTriKetQua">
                <option value="">Ch·ªçn k·∫øt qu·∫£</option>
                <option value="ƒê√£ s·ª≠a xong">ƒê√£ s·ª≠a xong</option>
                <option value="C·∫ßn thay th·∫ø linh ki·ªán">C·∫ßn thay th·∫ø linh ki·ªán</option>
                <option value="Ch·ªù x·ª≠ l√Ω">Ch·ªù x·ª≠ l√Ω</option>
                <option value="Kh√¥ng th·ªÉ s·ª≠a">Kh√¥ng th·ªÉ s·ª≠a</option>
              </select>
            </div>
          </div>
        </form>
      </div>

      <div class="modal-footer">
        <button class="btn-secondary" type="button" onclick="closeBaoTriModal()">H·ªßy</button>
        <button class="btn-primary" type="submit" form="baoTriForm">L∆∞u b·∫£o tr√¨</button>
      </div>
    </div>
  </div>

  <!-- L·ªãch s·ª≠ b·∫£o tr√¨ Modal -->
  <div class="modal-overlay" id="historyModal" style="display: none;">
    <div class="modal-container large">
      <div class="modal-header">
        <h2 id="historyTitle">L·ªãch s·ª≠ b·∫£o tr√¨</h2>
        <button class="modal-close" onclick="closeHistoryModal()">
          <i class="fas fa-times"></i>
        </button>
      </div>
      <div class="modal-body">
        <div class="history-list" id="historyList">
          <!-- Danh s√°ch l·ªãch s·ª≠ b·∫£o tr√¨ s·∫Ω ƒë∆∞·ª£c ƒëi·ªÅn b·∫±ng JS -->
        </div>
      </div>
      <div class="modal-footer">
        <button class="btn-secondary" onclick="closeHistoryModal()">ƒê√≥ng</button>
      </div>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
  // ===== CONFIGURATION & STATE =====
  let allThietBis = [];
  let filteredThietBis = [];
  let currentThietBiHistory = [];

  // ===== STATISTICS CALCULATION =====
  function calculateStatistics() {
    const thietBis = allThietBis;
    
    const totalThietBis = thietBis.length;
    const countGood = thietBis.filter(tb => 
      tb.getAttribute('data-tinhtrang') === 'T·ªët'
    ).length;
    
    const countMaintenance = thietBis.filter(tb => 
      tb.getAttribute('data-tinhtrang') === 'ƒêang b·∫£o tr√¨'
    ).length;
    
    const countBroken = thietBis.filter(tb => 
      tb.getAttribute('data-tinhtrang') === 'H·ªèng'
    ).length;
    
    // ƒê·∫øm theo lo·∫°i thi·∫øt b·ªã
    const countMicro = thietBis.filter(tb => 
      tb.getAttribute('data-loai') === 'Micro'
    ).length;
    
    const countLoa = thietBis.filter(tb => 
      tb.getAttribute('data-loai') === 'Loa'
    ).length;
    
    const countScreen = thietBis.filter(tb => 
      tb.getAttribute('data-loai') === 'M√†n h√¨nh'
    ).length;
    
    const countAC = thietBis.filter(tb => 
      tb.getAttribute('data-loai') === 'ƒêi·ªÅu h√≤a'
    ).length;

    updateStatCard('#statTotal', totalThietBis);
    updateStatCard('#statGood', countGood);
    updateStatCard('#statMaintenance', countMaintenance);
    updateStatCard('#statBroken', countBroken);
    updateStatCard('#statMicro', countMicro);
    updateStatCard('#statLoa', countLoa);
    updateStatCard('#statScreen', countScreen);
    updateStatCard('#statAC', countAC);
  }

  function updateStatCard(selector, value) {
    const element = document.querySelector(selector);
    if (element) {
      element.textContent = value;
    }
  }

  // ===== FORMAT FUNCTIONS =====
  function formatCurrency(amount) {
    if (typeof amount === 'string') {
      amount = parseFloat(amount) || 0;
    }
    return new Intl.NumberFormat('vi-VN', {
      style: 'currency',
      currency: 'VND'
    }).format(amount);
  }

  function formatDate(dateString) {
    if (!dateString) return 'N/A';
    const date = new Date(dateString);
    return date.toLocaleDateString('vi-VN');
  }

  function formatDateTime(dateString) {
    if (!dateString) return 'N/A';
    const date = new Date(dateString);
    return date.toLocaleString('vi-VN');
  }

  // Helper function cho Handlebars ƒë·ªÉ l·∫•y icon theo lo·∫°i thi·∫øt b·ªã
  function getDeviceIcon(loaiThietBi) {
    const iconMap = {
      'Micro': 'fas fa-microphone',
      'Loa': 'fas fa-volume-up',
      'Amply': 'fas fa-sliders-h',
      'M√†n h√¨nh': 'fas fa-tv',
      'ƒêi·ªÅu h√≤a': 'fas fa-snowflake',
      'B√†n gh·∫ø': 'fas fa-chair',
      'Kh√°c': 'fas fa-cogs'
    };
    return iconMap[loaiThietBi] || 'fas fa-cog';
  }

  // Helper function cho Handlebars
  function eq(a, b) {
    return a === b;
  }

  // ===== THIET BI MANAGEMENT =====
  function openThietBiModal(thietBiData = null) {
    document.getElementById('modalTitle').textContent = thietBiData ? 'Ch·ªânh s·ª≠a thi·∫øt b·ªã' : 'Th√™m thi·∫øt b·ªã m·ªõi';
    document.getElementById('thietBiModal').style.display = 'flex';
    document.body.style.overflow = 'hidden';

    if (thietBiData) {
      document.getElementById('thietBiId').value = thietBiData._id || '';
      document.getElementById('thietBiMaTB').value = thietBiData.MaThietBi || '';
      document.getElementById('thietBiName').value = thietBiData.TenThietBi || '';
      document.getElementById('thietBiMaPhong').value = thietBiData.MaPhong || '';
      document.getElementById('thietBiLoai').value = thietBiData.LoaiThietBi || '';
      document.getElementById('thietBiStatus').value = thietBiData.TinhTrang || 'T·ªët';
      document.getElementById('thietBiHangSX').value = thietBiData.HangSanXuat || '';
      document.getElementById('thietBiModel').value = thietBiData.Model || '';
      document.getElementById('thietBiGiaTri').value = thietBiData.GiaTri || '';
      document.getElementById('thietBiNgayNhap').value = thietBiData.NgayNhap ? new Date(thietBiData.NgayNhap).toISOString().split('T')[0] : '';
      document.getElementById('thietBiBaoHanh').value = thietBiData.ThoiGianBaoHanh || '';
      document.getElementById('thietBiGhiChu').value = thietBiData.GhiChu || '';
      document.getElementById('thietBiAvatar').value = thietBiData.LinkAnh || '';
      updateThietBiPreview(thietBiData.LinkAnh || '');
    } else {
      resetThietBiForm();
    }
  }

  function closeThietBiModal() {
    document.getElementById('thietBiModal').style.display = 'none';
    document.body.style.overflow = 'auto';
  }

  function resetThietBiForm() {
    document.getElementById('thietBiForm').reset();
    document.getElementById('thietBiId').value = '';
    document.getElementById('thietBiMaTB').value = '';
    document.getElementById('thietBiStatus').value = 'T·ªët';
    document.getElementById('thietBiNgayNhap').value = new Date().toISOString().split('T')[0];
    updateThietBiPreview('');
  }

  function updateThietBiPreview(avatarUrl) {
    const preview = document.getElementById('thietBiPreview');
    if (avatarUrl && avatarUrl.trim() !== '') {
      preview.innerHTML = `<img src="${avatarUrl}" alt="Preview" onerror="this.style.display='none'">`;
    } else {
      preview.innerHTML = '<i class="fas fa-microphone"></i><p>Preview s·∫Ω hi·ªÉn th·ªã ·ªü ƒë√¢y</p>';
    }
  }

  async function saveThietBi(event) {
    event.preventDefault();

    const thietBiId = document.getElementById('thietBiId').value;
    const isEdit = !!thietBiId;

    const formData = {
      TenThietBi: document.getElementById('thietBiName').value.trim(),
      MaPhong: document.getElementById('thietBiMaPhong').value,
      LoaiThietBi: document.getElementById('thietBiLoai').value,
      TinhTrang: document.getElementById('thietBiStatus').value,
      HangSanXuat: document.getElementById('thietBiHangSX').value.trim() || '',
      Model: document.getElementById('thietBiModel').value.trim() || '',
      GiaTri: document.getElementById('thietBiGiaTri').value ? parseInt(document.getElementById('thietBiGiaTri').value) : 0,
      NgayNhap: document.getElementById('thietBiNgayNhap').value || new Date().toISOString(),
      ThoiGianBaoHanh: document.getElementById('thietBiBaoHanh').value ? parseInt(document.getElementById('thietBiBaoHanh').value) : 0,
      GhiChu: document.getElementById('thietBiGhiChu').value.trim() || '',
      LinkAnh: document.getElementById('thietBiAvatar').value.trim()
    };

    // Validation
    if (!formData.TenThietBi) {
      showError('Vui l√≤ng nh·∫≠p t√™n thi·∫øt b·ªã');
      return;
    }
    if (!formData.MaPhong) {
      showError('Vui l√≤ng ch·ªçn ph√≤ng');
      return;
    }
    if (!formData.LoaiThietBi) {
      showError('Vui l√≤ng ch·ªçn lo·∫°i thi·∫øt b·ªã');
      return;
    }

    const url = isEdit ? `/api/thietbi/${document.getElementById('thietBiMaTB').value}` : '/api/thietbi';
    const method = isEdit ? 'PUT' : 'POST';

    try {
      Swal.fire({
        title: 'ƒêang l∆∞u th√¥ng tin...',
        text: 'Vui l√≤ng ch·ªù trong gi√¢y l√°t',
        allowOutsideClick: false,
        didOpen: () => Swal.showLoading()
      });

      const response = await fetch(url, {
        method: method,
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(formData)
      });

      const result = await response.json();
      if (!response.ok) throw new Error(result.error || 'L·ªói server');

      Swal.fire({
        icon: 'success',
        title: 'Th√†nh c√¥ng!',
        text: result.message || `Thi·∫øt b·ªã "${formData.TenThietBi}" ƒë√£ ƒë∆∞·ª£c ${isEdit ? 'c·∫≠p nh·∫≠t' : 'th√™m'} th√†nh c√¥ng!`,
        timer: 1500,
        showConfirmButton: false
      });

      setTimeout(() => {
        location.reload();
      }, 1500);

    } catch (error) {
      console.error('‚ùå L·ªói khi l∆∞u thi·∫øt b·ªã:', error);
      Swal.fire({
        icon: 'error',
        title: 'L·ªói!',
        text: error.message || 'Kh√¥ng th·ªÉ l∆∞u th√¥ng tin thi·∫øt b·ªã',
        confirmButtonColor: '#667eea'
      });
    }
  }

  async function deleteThietBi(thietBiId, tenThietBi) {
    const result = await Swal.fire({
      title: 'X√°c nh·∫≠n x√≥a?',
      html: `B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a thi·∫øt b·ªã <strong>${tenThietBi}</strong>?`,
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#e53e3e',
      cancelButtonColor: '#667eea',
      confirmButtonText: 'X√≥a',
      cancelButtonText: 'H·ªßy'
    });

    if (result.isConfirmed) {
      try {
        const response = await fetch(`/api/thietbi/${thietBiId}`, { method: 'DELETE' });
        if (!response.ok) throw new Error('L·ªói khi x√≥a thi·∫øt b·ªã');

        await Swal.fire({
          icon: 'success',
          title: 'ƒê√£ x√≥a!',
          text: 'Thi·∫øt b·ªã ƒë√£ ƒë∆∞·ª£c x√≥a th√†nh c√¥ng',
          timer: 1500,
          showConfirmButton: false
        });

        location.reload();
      } catch (error) {
        Swal.fire({
          icon: 'error',
          title: 'L·ªói!',
          text: 'Kh√¥ng th·ªÉ x√≥a thi·∫øt b·ªã'
        });
      }
    }
  }

  // ===== BAO TRI MANAGEMENT =====
  function openBaoTriModal(baoTriData = null) {
    document.getElementById('baoTriModal').style.display = 'flex';
    document.body.style.overflow = 'hidden';

    if (baoTriData) {
      // ƒêi·ªÅn th√¥ng tin b·∫£o tr√¨ n·∫øu c√≥
      document.getElementById('baoTriId').value = baoTriData._id || '';
      document.getElementById('baoTriMaThietBi').value = baoTriData.MaThietBi || '';
      document.getElementById('baoTriChiPhi').value = baoTriData.ChiPhi || '';
      document.getElementById('baoTriThoiGian').value = baoTriData.ThoiGian ? new Date(baoTriData.ThoiGian).toISOString().slice(0, 16) : '';
      document.getElementById('baoTriMoTa').value = baoTriData.MoTa || '';
      document.getElementById('baoTriNhanVien').value = baoTriData.NhanVien || '';
      document.getElementById('baoTriKetQua').value = baoTriData.KetQua || '';
      updateThietBiInfo();
    } else {
      resetBaoTriForm();
    }
  }

  function closeBaoTriModal() {
    document.getElementById('baoTriModal').style.display = 'none';
    document.body.style.overflow = 'auto';
  }

  function resetBaoTriForm() {
    document.getElementById('baoTriForm').reset();
    document.getElementById('baoTriId').value = '';
    document.getElementById('baoTriThoiGian').value = new Date().toISOString().slice(0, 16);
  }

  function updateThietBiInfo() {
    const selectedOption = document.querySelector('#baoTriMaThietBi option:checked');
    if (selectedOption && selectedOption.value) {
      document.getElementById('baoTriTenThietBi').value = selectedOption.getAttribute('data-tenthietbi') || '';
      document.getElementById('baoTriMaPhong').value = selectedOption.getAttribute('data-maphong') || '';
    }
  }

  async function saveBaoTri(event) {
    event.preventDefault();

    const formData = {
      MaThietBi: document.getElementById('baoTriMaThietBi').value,
      ChiPhi: document.getElementById('baoTriChiPhi').value ? parseInt(document.getElementById('baoTriChiPhi').value) : 0,
      ThoiGian: document.getElementById('baoTriThoiGian').value,
      MoTa: document.getElementById('baoTriMoTa').value.trim(),
      NhanVien: document.getElementById('baoTriNhanVien').value.trim() || '',
      KetQua: document.getElementById('baoTriKetQua').value || ''
    };

    // Validation
    if (!formData.MaThietBi) {
      showError('Vui l√≤ng ch·ªçn thi·∫øt b·ªã');
      return;
    }
    if (!formData.ChiPhi || formData.ChiPhi <= 0) {
      showError('Vui l√≤ng nh·∫≠p chi ph√≠ b·∫£o tr√¨ h·ª£p l·ªá');
      return;
    }
    if (!formData.MoTa) {
      showError('Vui l√≤ng nh·∫≠p m√¥ t·∫£ b·∫£o tr√¨');
      return;
    }

    try {
      Swal.fire({
        title: 'ƒêang l∆∞u th√¥ng tin...',
        text: 'Vui l√≤ng ch·ªù trong gi√¢y l√°t',
        allowOutsideClick: false,
        didOpen: () => Swal.showLoading()
      });

      const response = await fetch('/api/baotri', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(formData)
      });

      const result = await response.json();
      if (!response.ok) throw new Error(result.error || 'L·ªói server');

      Swal.fire({
        icon: 'success',
        title: 'Th√†nh c√¥ng!',
        text: result.message || 'Th√¥ng tin b·∫£o tr√¨ ƒë√£ ƒë∆∞·ª£c l∆∞u th√†nh c√¥ng!',
        timer: 1500,
        showConfirmButton: false
      });

      setTimeout(() => {
        closeBaoTriModal();
        location.reload();
      }, 1500);

    } catch (error) {
      console.error('‚ùå L·ªói khi l∆∞u b·∫£o tr√¨:', error);
      Swal.fire({
        icon: 'error',
        title: 'L·ªói!',
        text: error.message || 'Kh√¥ng th·ªÉ l∆∞u th√¥ng tin b·∫£o tr√¨',
        confirmButtonColor: '#667eea'
      });
    }
  }

  // ===== LICH SU BAO TRI =====
  async function viewBaoTriHistory(maThietBi) {
    try {
      // G·ªçi API ƒë·ªÉ l·∫•y l·ªãch s·ª≠ b·∫£o tr√¨
      const response = await fetch(`/api/baotri/thietbi/${maThietBi}`);
      const history = await response.json();

      currentThietBiHistory = history;
      
      // Hi·ªÉn th·ªã modal l·ªãch s·ª≠
      document.getElementById('historyTitle').textContent = `L·ªãch s·ª≠ b·∫£o tr√¨ - ${maThietBi}`;
      renderBaoTriHistory(history);
      document.getElementById('historyModal').style.display = 'flex';
      document.body.style.overflow = 'hidden';
      
    } catch (error) {
      console.error('L·ªói khi l·∫•y l·ªãch s·ª≠ b·∫£o tr√¨:', error);
      showError('Kh√¥ng th·ªÉ t·∫£i l·ªãch s·ª≠ b·∫£o tr√¨');
    }
  }

  function renderBaoTriHistory(history) {
    const historyList = document.getElementById('historyList');
    
    if (!history || history.length === 0) {
      historyList.innerHTML = '<div class="empty-history">Ch∆∞a c√≥ l·ªãch s·ª≠ b·∫£o tr√¨</div>';
      return;
    }

    historyList.innerHTML = history.map(item => `
      <div class="history-item">
        <div class="history-header">
          <span class="history-date">${formatDateTime(item.ThoiGian)}</span>
          <span class="history-cost">${formatCurrency(item.ChiPhi)}</span>
        </div>
        <div class="history-details">
          <p class="history-desc">${item.MoTa}</p>
          ${item.NhanVien ? `<p class="history-staff"><strong>Nh√¢n vi√™n:</strong> ${item.NhanVien}</p>` : ''}
          ${item.KetQua ? `<p class="history-result"><strong>K·∫øt qu·∫£:</strong> ${item.KetQua}</p>` : ''}
        </div>
      </div>
    `).join('');
  }

  function closeHistoryModal() {
    document.getElementById('historyModal').style.display = 'none';
    document.body.style.overflow = 'auto';
  }

  // ===== FILTER & SEARCH =====
  function filterThietBi() {
    const searchTerm = document.getElementById('searchInput').value.toLowerCase();
    const phongFilter = document.getElementById('phongFilter').value;
    const statusFilter = document.getElementById('statusFilter').value;
    const loaiFilter = document.getElementById('loaiFilter').value;

    filteredThietBis = allThietBis.filter(card => {
      const tenthietbi = card.getAttribute('data-tenthietbi').toLowerCase();
      const matb = card.getAttribute('data-matb').toLowerCase();
      const maphong = card.getAttribute('data-maphong');
      const tinhtrang = card.getAttribute('data-tinhtrang');
      const loai = card.getAttribute('data-loai');

      const matchesSearch = !searchTerm || 
        tenthietbi.includes(searchTerm) || 
        matb.includes(searchTerm);
      const matchesPhong = !phongFilter || maphong === phongFilter;
      const matchesStatus = !statusFilter || tinhtrang === statusFilter;
      const matchesLoai = !loaiFilter || loai === loaiFilter;

      const shouldShow = matchesSearch && matchesPhong && matchesStatus && matchesLoai;
      card.style.display = shouldShow ? 'block' : 'none';
      return shouldShow;
    });

    calculateFilteredStatistics();
    toggleEmptyState(filteredThietBis.length === 0);
  }

  function calculateFilteredStatistics() {
    const thietBis = filteredThietBis;
    
    const totalThietBis = thietBis.length;
    const countGood = thietBis.filter(tb => 
      tb.getAttribute('data-tinhtrang') === 'T·ªët'
    ).length;
    
    const countMaintenance = thietBis.filter(tb => 
      tb.getAttribute('data-tinhtrang') === 'ƒêang b·∫£o tr√¨'
    ).length;
    
    const countBroken = thietBis.filter(tb => 
      tb.getAttribute('data-tinhtrang') === 'H·ªèng'
    ).length;
    
    // ƒê·∫øm theo lo·∫°i thi·∫øt b·ªã
    const countMicro = thietBis.filter(tb => 
      tb.getAttribute('data-loai') === 'Micro'
    ).length;
    
    const countLoa = thietBis.filter(tb => 
      tb.getAttribute('data-loai') === 'Loa'
    ).length;
    
    const countScreen = thietBis.filter(tb => 
      tb.getAttribute('data-loai') === 'M√†n h√¨nh'
    ).length;
    
    const countAC = thietBis.filter(tb => 
      tb.getAttribute('data-loai') === 'ƒêi·ªÅu h√≤a'
    ).length;

    updateStatCard('#statTotal', totalThietBis);
    updateStatCard('#statGood', countGood);
    updateStatCard('#statMaintenance', countMaintenance);
    updateStatCard('#statBroken', countBroken);
    updateStatCard('#statMicro', countMicro);
    updateStatCard('#statLoa', countLoa);
    updateStatCard('#statScreen', countScreen);
    updateStatCard('#statAC', countAC);
  }

  function clearFilters() {
    document.getElementById('searchInput').value = '';
    document.getElementById('phongFilter').value = '';
    document.getElementById('statusFilter').value = '';
    document.getElementById('loaiFilter').value = '';

    allThietBis.forEach(card => {
      card.style.display = 'block';
    });

    filteredThietBis = [...allThietBis];
    calculateStatistics();
    toggleEmptyState(false);
  }

  function toggleEmptyState(show) {
    const emptyState = document.getElementById('emptyState');
    const grid = document.getElementById('thietBiGrid');

    if (!emptyState || !grid) return;

    if (show) {
      grid.style.display = 'none';
      emptyState.style.display = 'block';
    } else {
      grid.style.display = 'grid';
      emptyState.style.display = 'none';
    }
  }

  // ===== UTILITY FUNCTIONS =====
  function showError(message) {
    Swal.fire({
      icon: 'warning',
      title: 'Thi·∫øu th√¥ng tin',
      text: message,
      confirmButtonColor: '#667eea'
    });
  }

  // ===== INITIALIZATION =====
  document.addEventListener('DOMContentLoaded', function () {
    allThietBis = Array.from(document.querySelectorAll('.room-card'));
    filteredThietBis = [...allThietBis];
    
    calculateStatistics();
    
    // Setup real-time search
    const searchInput = document.getElementById('searchInput');
    let searchTimeout;
    
    if (searchInput) {
      searchInput.addEventListener('input', function () {
        clearTimeout(searchTimeout);
        searchTimeout = setTimeout(() => {
          filterThietBi();
        }, 300);
      });
    }
  });
</script>

<style>
  /* ===== MAIN CONTENT STYLES ===== */
  .main-content {
    margin-left: 280px;
    transition: margin-left 0.3s ease;
    min-height: 100vh;
    background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
  }

  .sidebar-collapsed .main-content {
    margin-left: 80px;
  }

  /* ===== DASHBOARD STYLES ===== */
  .admin-dashboard {
    padding: 24px;
    min-height: 100vh;
  }

  .dashboard-header {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    border-radius: 16px;
    padding: 28px;
    margin-bottom: 28px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    color: white;
    position: relative;
    overflow: hidden;
  }

  .dashboard-header::before {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    width: 200px;
    height: 200px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 50%;
    transform: translate(30%, -30%);
  }

  .header-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    gap: 20px;
    position: relative;
    z-index: 1;
  }

  .header-title {
    display: flex;
    align-items: center;
    gap: 20px;
  }

  .title-icon {
    font-size: 3rem;
    filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.2));
  }

  .header-title h1 {
    margin: 0;
    font-size: 2rem;
    font-weight: 700;
  }

  .header-title p {
    margin: 8px 0 0 0;
    opacity: 0.9;
    font-size: 1.1rem;
  }

  .header-actions {
    display: flex;
    gap: 16px;
    align-items: center;
  }

  /* ===== BUTTON STYLES ===== */
  .btn-primary {
    background: linear-gradient(135deg, #48bb78 0%, #38a169 100%);
    color: white;
    border: none;
    padding: 14px 24px;
    border-radius: 12px;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 10px;
    font-weight: 600;
    font-size: 1rem;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(72, 187, 120, 0.3);
  }

  .btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(72, 187, 120, 0.4);
  }

  .btn-secondary {
    background: rgba(255, 255, 255, 0.2);
    color: white;
    border: 2px solid rgba(255, 255, 255, 0.3);
    padding: 14px;
    border-radius: 12px;
    cursor: pointer;
    display: flex;
    align-items: center;
    transition: all 0.3s ease;
    backdrop-filter: blur(10px);
  }

  .btn-secondary:hover {
    background: rgba(255, 255, 255, 0.3);
    transform: translateY(-1px);
  }

  /* ===== SEARCH AND FILTER ===== */
  .search-filter-bar {
    background: white;
    border-radius: 16px;
    padding: 24px;
    margin-bottom: 28px;
    display: flex;
    gap: 24px;
    align-items: center;
    flex-wrap: wrap;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    border: 1px solid rgba(0, 0, 0, 0.05);
  }

  .search-box {
    display: flex;
    align-items: center;
    background: #f8fafc;
    border-radius: 12px;
    padding: 12px 20px;
    flex: 1;
    min-width: 320px;
    border: 2px solid #e2e8f0;
    transition: all 0.3s ease;
  }

  .search-box:focus-within {
    border-color: #667eea;
    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
  }

  .search-box i {
    color: #64748b;
    margin-right: 12px;
    font-size: 1.1rem;
  }

  .search-box input {
    border: none;
    background: none;
    outline: none;
    flex: 1;
    padding: 8px 0;
    font-size: 1rem;
    color: #1e293b;
  }

  .search-box input::placeholder {
    color: #94a3b8;
  }

  .search-btn {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    border: none;
    padding: 12px 24px;
    border-radius: 10px;
    cursor: pointer;
    margin-left: 16px;
    font-weight: 600;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
  }

  .search-btn:hover {
    transform: translateY(-1px);
    box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);
  }

  .filter-controls {
    display: flex;
    gap: 16px;
    align-items: center;
    flex-wrap: wrap;
  }

  .filter-select {
    padding: 12px 20px;
    border: 2px solid #e2e8f0;
    border-radius: 10px;
    background: white;
    color: #475569;
    min-width: 180px;
    font-size: 1rem;
    transition: all 0.3s ease;
    cursor: pointer;
  }

  .filter-select:focus {
    outline: none;
    border-color: #667eea;
    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
  }

  .clear-filters {
    background: #f1f5f9;
    border: 2px solid #e2e8f0;
    color: #64748b;
    padding: 12px 20px;
    border-radius: 10px;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 8px;
    transition: all 0.3s ease;
    font-weight: 500;
  }

  .clear-filters:hover {
    background: #e2e8f0;
    color: #475569;
    transform: translateY(-1px);
  }

  /* ===== STATS OVERVIEW ===== */
  .stats-overview {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 24px;
    margin-bottom: 32px;
  }

  .stat-card {
    background: white;
    border-radius: 20px;
    padding: 32px;
    display: flex;
    align-items: center;
    gap: 20px;
    box-shadow: 0 4px 25px rgba(0, 0, 0, 0.08);
    transition: all 0.3s ease;
    border: 1px solid rgba(0, 0, 0, 0.03);
    position: relative;
    overflow: hidden;
  }

  .stat-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, #667eea, #764ba2);
  }

  .stat-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 35px rgba(0, 0, 0, 0.12);
  }

  .stat-icon {
    width: 80px;
    height: 80px;
    border-radius: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 2rem;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  }

  .stat-icon.total {
    background: linear-gradient(135deg, #fed7d7, #feb2b2);
    color: #c53030;
  }

  .stat-icon.active {
    background: linear-gradient(135deg, #c6f6d5, #9ae6b4);
    color: #276749;
  }

  .stat-icon.reception {
    background: linear-gradient(135deg, #fed7d7, #feb2b2);
    color: #c53030;
  }

  .stat-icon.service {
    background: linear-gradient(135deg, #fefcbf, #faf089);
    color: #d69e2e;
  }

  .stat-icon.technical {
    background: linear-gradient(135deg, #e9d8fd, #d6bcfa);
    color: #553c9a;
  }

  .stat-icon.manager {
    background: linear-gradient(135deg, #bee3f8, #90cdf4);
    color: #1a365d;
  }

  .stat-icon.security {
    background: linear-gradient(135deg, #c6f6d5, #9ae6b4);
    color: #276749;
  }

  .stat-icon.fulltime {
    background: linear-gradient(135deg, #fed7d7, #feb2b2);
    color: #c53030;
  }

  .stat-info h3 {
    margin: 0;
    font-size: 2.5rem;
    color: #1e293b;
    font-weight: 700;
  }

  .stat-info p {
    margin: 8px 0 0 0;
    color: #64748b;
    font-size: 1.1rem;
    font-weight: 500;
  }

  /* ===== ROOMS GRID ===== */
  .rooms-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(360px, 1fr));
    gap: 28px;
  }

  .room-card {
    background: white;
    border-radius: 20px;
    overflow: hidden;
    box-shadow: 0 4px 25px rgba(0, 0, 0, 0.08);
    transition: all 0.4s ease;
    border: 1px solid rgba(0, 0, 0, 0.03);
    position: relative;
  }

  .room-card:hover {
    transform: translateY(-8px);
    box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
  }

  .room-image {
    position: relative;
    height: 240px;
    overflow: hidden;
  }

  .room-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.6s ease;
  }

  .room-card:hover .room-image img {
    transform: scale(1.1);
  }

  .room-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, rgba(102, 126, 234, 0.9), rgba(118, 75, 162, 0.9));
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: all 0.4s ease;
  }

  .room-card:hover .room-overlay {
    opacity: 1;
  }

  .room-actions {
    display: flex;
    gap: 16px;
  }

  .btn-edit,
  .btn-delete {
    width: 56px;
    height: 56px;
    border: none;
    border-radius: 14px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.2rem;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
  }

  .btn-edit {
    background: linear-gradient(135deg, #48bb78, #38a169);
    color: white;
  }

  .btn-delete {
    background: linear-gradient(135deg, #f56565, #e53e3e);
    color: white;
  }

  .btn-edit:hover,
  .btn-delete:hover {
    transform: scale(1.1) translateY(-2px);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
  }

  .room-badge {
    position: absolute;
    top: 16px;
    left: 16px;
    padding: 8px 16px;
    border-radius: 25px;
    font-size: 0.85rem;
    font-weight: 700;
    backdrop-filter: blur(10px);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    z-index: 2;
  }

  .room-badge.Micro {
    background: linear-gradient(135deg, rgba(245, 101, 101, 0.95), rgba(229, 62, 62, 0.95));
    color: white;
  }

  .room-badge.Loa {
    background: linear-gradient(135deg, rgba(66, 153, 225, 0.95), rgba(49, 130, 206, 0.95));
    color: white;
  }

  .room-badge.Amply {
    background: linear-gradient(135deg, rgba(237, 137, 54, 0.95), rgba(217, 119, 6, 0.95));
    color: white;
  }

  .room-badge.M√†n-h√¨nh {
    background: linear-gradient(135deg, rgba(102, 126, 234, 0.95), rgba(118, 75, 162, 0.95));
    color: white;
  }

  .room-badge.ƒêi·ªÅu-h√≤a {
    background: linear-gradient(135deg, rgba(72, 187, 120, 0.95), rgba(56, 161, 105, 0.95));
    color: white;
  }

  .room-badge.B√†n-gh·∫ø {
    background: linear-gradient(135deg, rgba(159, 122, 234, 0.95), rgba(128, 90, 213, 0.95));
    color: white;
  }

  .room-badge.Kh√°c {
    background: linear-gradient(135deg, rgba(160, 174, 192, 0.95), rgba(113, 128, 150, 0.95));
    color: white;
  }

  .room-status {
    position: absolute;
    top: 16px;
    right: 16px;
    padding: 8px 16px;
    border-radius: 25px;
    font-size: 0.85rem;
    font-weight: 700;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    z-index: 2;
  }

  .room-status.active {
    background: linear-gradient(135deg, rgba(72, 187, 120, 0.95), rgba(56, 161, 105, 0.95));
    color: white;
  }

  .room-status.onleave {
    background: linear-gradient(135deg, rgba(237, 137, 54, 0.95), rgba(217, 119, 6, 0.95));
    color: white;
  }

  .room-status.inactive {
    background: linear-gradient(135deg, rgba(245, 101, 101, 0.95), rgba(229, 62, 62, 0.95));
    color: white;
  }

  .room-content {
    padding: 24px;
  }

  .room-title {
    margin: 0 0 12px 0;
    color: #1e293b;
    font-size: 1.4rem;
    font-weight: 700;
  }

  .room-code {
    margin: 0 0 20px 0;
    color: #64748b;
    font-size: 0.9rem;
    font-weight: 600;
  }

  .room-details {
    display: flex;
    flex-direction: column;
    gap: 12px;
    margin-bottom: 20px;
  }

  .detail-item {
    display: flex;
    align-items: center;
    gap: 12px;
    color: #475569;
    font-size: 1rem;
  }

  .detail-item i {
    color: #667eea;
    width: 20px;
    font-size: 1.1rem;
  }

  /* ===== MAINTENANCE HISTORY ===== */
  .maintenance-history {
    margin-top: 10px;
    padding-top: 10px;
    border-top: 1px solid #e2e8f0;
  }

  .maintenance-history h4 {
    margin: 0 0 8px 0;
    color: #1e293b;
    font-size: 1rem;
    font-weight: 600;
  }

  .maintenance-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 5px;
  }

  .maintenance-date {
    font-size: 0.85em;
    color: #718096;
  }

  .maintenance-cost {
    font-weight: bold;
    color: #2d3748;
    font-size: 0.9em;
  }

  .maintenance-desc {
    font-size: 0.8em;
    color: #718096;
    margin: 5px 0 0 0;
    line-height: 1.4;
  }

  .room-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-top: 20px;
    border-top: 2px solid #f1f5f9;
  }

  .room-id {
    color: #94a3b8;
    font-size: 0.9rem;
    font-weight: 600;
  }

  .btn-status {
    background: linear-gradient(135deg, #f1f5f9, #e2e8f0);
    border: none;
    width: 44px;
    height: 44px;
    border-radius: 12px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #475569;
    transition: all 0.3s ease;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  .btn-status:hover {
    background: linear-gradient(135deg, #e2e8f0, #cbd5e0);
    transform: rotate(15deg);
    color: #667eea;
  }

  /* ===== EMPTY STATE ===== */
  .empty-state {
    text-align: center;
    padding: 80px 40px;
    background: white;
    border-radius: 24px;
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.08);
    border: 2px dashed #e2e8f0;
  }

  .empty-icon {
    font-size: 5rem;
    margin-bottom: 24px;
    opacity: 0.7;
  }

  .empty-state h3 {
    margin: 0 0 12px 0;
    color: #1e293b;
    font-size: 1.8rem;
    font-weight: 700;
  }

  .empty-state p {
    margin: 0 0 32px 0;
    color: #64748b;
    font-size: 1.2rem;
  }

  /* ===== MODAL STYLES ===== */
  .modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.6);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 10000;
    padding: 20px;
    backdrop-filter: blur(8px);
  }

  .modal-container {
    background: white;
    border-radius: 24px;
    width: 100%;
    max-width: 900px;
    max-height: 90vh;
    overflow-y: auto;
    box-shadow: 0 25px 50px rgba(0, 0, 0, 0.25);
    border: 1px solid rgba(255, 255, 255, 0.2);
    animation: modalSlideIn 0.4s ease-out;
  }

  @keyframes modalSlideIn {
    from {
      opacity: 0;
      transform: translateY(-30px) scale(0.9);
    }

    to {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }

  .modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 28px;
    border-bottom: 2px solid #f1f5f9;
    background: linear-gradient(135deg, #f8fafc, #f1f5f9);
    border-radius: 24px 24px 0 0;
  }

  .modal-header h2 {
    margin: 0;
    color: #1e293b;
    font-size: 1.8rem;
    font-weight: 700;
  }

  .modal-close {
    background: #f1f5f9;
    border: none;
    font-size: 1.4rem;
    color: #64748b;
    cursor: pointer;
    padding: 8px;
    border-radius: 12px;
    transition: all 0.3s ease;
    width: 44px;
    height: 44px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .modal-close:hover {
    background: #e2e8f0;
    color: #475569;
    transform: rotate(90deg);
  }

  .modal-body {
    padding: 28px;
  }

  .form-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 20px;
    margin-bottom: 20px;
  }

  .form-group {
    display: flex;
    flex-direction: column;
  }

  .form-group.full-width {
    grid-column: 1 / -1;
  }

  .form-group label {
    margin-bottom: 10px;
    color: #374151;
    font-weight: 600;
    font-size: 1rem;
  }

  .form-group input,
  .form-group select,
  .form-group textarea {
    padding: 14px 16px;
    border: 2px solid #e2e8f0;
    border-radius: 12px;
    font-size: 1rem;
    transition: all 0.3s ease;
    background: white;
  }

  .form-group input:focus,
  .form-group select:focus,
  .form-group textarea:focus {
    outline: none;
    border-color: #667eea;
    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
    transform: translateY(-1px);
  }

  .form-group textarea {
    resize: vertical;
    min-height: 100px;
  }

  .image-preview {
    border: 3px dashed #e2e8f0;
    border-radius: 16px;
    padding: 50px 30px;
    text-align: center;
    color: #94a3b8;
    margin-top: 10px;
    transition: all 0.3s ease;
    background: #f8fafc;
  }

  .image-preview:hover {
    border-color: #667eea;
    color: #667eea;
  }

  .image-preview img {
    max-width: 100%;
    max-height: 200px;
    border-radius: 12px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  }

  .modal-footer {
    display: flex;
    justify-content: flex-end;
    gap: 16px;
    padding: 28px;
    border-top: 2px solid #f1f5f9;
    background: #f8fafc;
    border-radius: 0 0 24px 24px;
  }

  /* ===== HISTORY MODAL STYLES ===== */
  .modal-container.large {
    max-width: 700px;
    width: 90%;
  }

  .history-list {
    max-height: 500px;
    overflow-y: auto;
    padding: 10px;
  }

  .history-item {
    padding: 15px;
    margin-bottom: 15px;
    border: 1px solid #e2e8f0;
    border-radius: 8px;
    background: #f7fafc;
    transition: all 0.3s ease;
  }

  .history-item:hover {
    border-color: #667eea;
    box-shadow: 0 2px 8px rgba(102, 126, 234, 0.1);
  }

  .history-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 10px;
    padding-bottom: 8px;
    border-bottom: 1px solid #e2e8f0;
  }

  .history-date {
    font-weight: bold;
    color: #2d3748;
    font-size: 0.9em;
  }

  .history-cost {
    font-weight: bold;
    color: #2d3748;
    font-size: 1em;
  }

  .history-details p {
    margin: 5px 0;
    line-height: 1.5;
  }

  .history-staff, .history-result {
    font-size: 0.85em;
    color: #4a5568;
  }

  .history-staff strong, .history-result strong {
    color: #2d3748;
  }

  .empty-history {
    text-align: center;
    padding: 40px 20px;
    color: #718096;
    font-style: italic;
  }

  /* ===== EMPLOYEE AVATAR PLACEHOLDER ===== */
  .employee-avatar-placeholder.device {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    border-radius: 0;
  }

  .employee-avatar-placeholder.device i {
    font-size: 3rem;
    color: white;
  }

  /* Custom colors for device types v·ªõi t√™n class ƒë√∫ng */
  .employee-avatar-placeholder.device.Micro {
    background: linear-gradient(135deg, #ff6b6b 0%, #ee5a52 100%);
  }

  .employee-avatar-placeholder.device.Loa {
    background: linear-gradient(135deg, #4ecdc4 0%, #44a08d 100%);
  }

  .employee-avatar-placeholder.device.Amply {
    background: linear-gradient(135deg, #ffd93d 0%, #ff9a3d 100%);
  }

  .employee-avatar-placeholder.device.M√†n-h√¨nh {
    background: linear-gradient(135deg, #6c5ce7 0%, #a29bfe 100%);
  }

  .employee-avatar-placeholder.device.ƒêi·ªÅu-h√≤a {
    background: linear-gradient(135deg, #00b894 0%, #00a085 100%);
  }

  .employee-avatar-placeholder.device.B√†n-gh·∫ø {
    background: linear-gradient(135deg, #fd79a8 0%, #fdcb6e 100%);
  }

  .employee-avatar-placeholder.device.Kh√°c {
    background: linear-gradient(135deg, #636e72 0%, #2d3436 100%);
  }

  /* ===== RESPONSIVE STYLES ===== */
  @media (max-width: 1200px) {
    .main-content {
      margin-left: 280px;
    }
  }

  @media (max-width: 1024px) {
    .main-content {
      margin-left: 80px;
    }

    .rooms-grid {
      grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    }
  }

  @media (max-width: 768px) {
    .main-content {
      margin-left: 0 !important;
      padding: 16px;
    }

    .admin-dashboard {
      padding: 16px;
    }

    .header-content {
      flex-direction: column;
      align-items: stretch;
      text-align: center;
    }

    .header-title {
      justify-content: center;
      text-align: center;
    }

    .search-filter-bar {
      flex-direction: column;
      align-items: stretch;
      padding: 20px;
    }

    .search-box {
      min-width: auto;
      margin-bottom: 16px;
    }

    .filter-controls {
      flex-direction: column;
      align-items: stretch;
    }

    .filter-select {
      min-width: auto;
    }

    .form-grid {
      grid-template-columns: 1fr;
    }

    .rooms-grid {
      grid-template-columns: 1fr;
      gap: 20px;
    }

    .stats-overview {
      grid-template-columns: 1fr;
      gap: 20px;
    }

    .modal-container {
      margin: 10px;
      max-width: none;
    }
  }

  @media (max-width: 480px) {
    .admin-dashboard {
      padding: 12px;
    }

    .dashboard-header {
      padding: 20px;
    }

    .header-actions {
      flex-direction: column;
      width: 100%;
    }

    .btn-primary {
      width: 100%;
      justify-content: center;
    }

    .stat-card {
      padding: 24px;
    }

    .room-content {
      padding: 20px;
    }
  }

  /* ===== FIXES ===== */
  .swal2-container {
    z-index: 100000 !important;
  }

  .modal-overlay[style*="display: flex"] {
    display: flex !important;
  }

  .modal-overlay[style*="display: none"] {
    display: none !important;
  }

  /* Custom scrollbar */
  ::-webkit-scrollbar {
    width: 8px;
  }

  ::-webkit-scrollbar-track {
    background: #f1f5f9;
    border-radius: 10px;
  }

  ::-webkit-scrollbar-thumb {
    background: #cbd5e0;
    border-radius: 10px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: #94a3b8;
  }
</style>